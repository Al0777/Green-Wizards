{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\GroupMembers.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport GroupMembersList from \"./GroupMembersList\";\nimport MembersOptionsModal from \"./OptionsModal\";\nimport GroupMembersAdminOptions from \"./GroupMembersAdminOptions\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Log from \"./Log\";\nimport GroupMembersNavbar from \"./GroupMembersNavbar\";\n\nvar getGroupChildren = function getGroupChildren(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/children\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getGroupMembers = function getGroupMembers(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/members\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getGroupSettings = function getGroupSettings(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/settings\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      open: \"\"\n    };\n  });\n};\n\nvar GroupMembers = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupMembers, _React$Component);\n\n  var _super = _createSuper(GroupMembers);\n\n  function GroupMembers(props) {\n    var _this;\n\n    _classCallCheck(this, GroupMembers);\n\n    _this = _super.call(this, props);\n\n    _this.handleExport = function () {\n      var group = _this.state.group;\n      var groupId = group.group_id;\n\n      _this.setState({\n        optionsModalIsOpen: false\n      });\n\n      axios.post(\"/api/groups/\".concat(groupId, \"/contacts/export\")).then(function (response) {\n        Log.info(response);\n      }).catch(function (error) {\n        Log.error(error);\n      });\n    };\n\n    _this.handlePendingRequests = function () {\n      var history = _this.props.history;\n      var group = _this.state.group;\n      var groupId = group.group_id;\n      history.push(\"/groups/\".concat(groupId, \"/members/pending\"));\n    };\n\n    _this.handleModalOpen = function () {\n      _this.setState({\n        optionsModalIsOpen: true\n      });\n    };\n\n    _this.handleModalClose = function () {\n      _this.setState({\n        optionsModalIsOpen: false\n      });\n    };\n\n    var _group = _this.props.group;\n    _this.state = {\n      fetchedGroupMembers: false,\n      group: _group,\n      optionsModalIsOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(GroupMembers, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var userIsAdmin, group, groupId, members, children, acceptedMembers, pendingRequests, settings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userIsAdmin = this.props.userIsAdmin;\n                group = this.state.group;\n                groupId = group.group_id;\n                _context.next = 5;\n                return getGroupMembers(groupId);\n\n              case 5:\n                members = _context.sent;\n                _context.next = 8;\n                return getGroupChildren(groupId);\n\n              case 8:\n                children = _context.sent;\n                acceptedMembers = [];\n                pendingRequests = 0;\n                members.forEach(function (member) {\n                  if (member.user_accepted && member.group_accepted) {\n                    acceptedMembers.push(member);\n                  } else if (member.user_accepted && !member.group_accepted) {\n                    pendingRequests += 1;\n                  }\n                });\n                _context.next = 14;\n                return getGroupSettings(groupId);\n\n              case 14:\n                settings = _context.sent;\n                this.setState({\n                  members: acceptedMembers,\n                  children: children,\n                  settings: settings,\n                  userIsAdmin: userIsAdmin,\n                  pendingRequests: pendingRequests,\n                  fetchedGroupMembers: true\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.props.history;\n      var _this$state = this.state,\n          fetchedGroupMembers = _this$state.fetchedGroupMembers,\n          group = _this$state.group,\n          members = _this$state.members,\n          userIsAdmin = _this$state.userIsAdmin,\n          settings = _this$state.settings,\n          children = _this$state.children,\n          pendingRequests = _this$state.pendingRequests,\n          optionsModalIsOpen = _this$state.optionsModalIsOpen;\n      var language = this.props.language;\n      var texts = Texts[language].groupMembers;\n      var options = [{\n        label: texts.export,\n        style: \"optionsModalButton\",\n        handle: this.handleExport\n      }];\n      var membersPath = \"/groups/\".concat(group.group_id, \"/members\");\n      return fetchedGroupMembers ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MembersOptionsModal, {\n        isOpen: optionsModalIsOpen,\n        options: options,\n        handleClose: this.handleModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(GroupMembersNavbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"groupMembersContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"groupMembersHeaderContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: function onClick() {\n          return history.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5-10 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"verticalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, group.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, userIsAdmin && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: this.handlePendingRequests,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-user-friends\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }), pendingRequests > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"members-badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, pendingRequests))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1-10 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, userIsAdmin && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: this.handleModalOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-ellipsis-v\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(membersPath, \"/parents\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }\n          }, userIsAdmin && /*#__PURE__*/React.createElement(GroupMembersAdminOptions, {\n            groupIsOpen: settings.open,\n            groupId: group.group_id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(GroupMembersList, Object.assign({\n            key: \"parents\"\n          }, props, {\n            members: members,\n            groupId: group.group_id,\n            userIsAdmin: userIsAdmin,\n            list: \"parents\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }\n          })));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(membersPath, \"/children\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupMembersList, Object.assign({\n            key: \"children\"\n          }, props, {\n            members: children,\n            groupId: group.group_id,\n            userIsAdmin: userIsAdmin,\n            list: \"children\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      })))) : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return GroupMembers;\n}(React.Component);\n\nexport default withLanguage(GroupMembers);\nGroupMembers.propTypes = {\n  group: PropTypes.object,\n  history: PropTypes.object,\n  userIsAdmin: PropTypes.bool,\n  language: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/GroupMembers.js"],"names":["React","PropTypes","Route","Switch","axios","Texts","withLanguage","GroupMembersList","MembersOptionsModal","GroupMembersAdminOptions","LoadingSpinner","Log","GroupMembersNavbar","getGroupChildren","groupId","get","then","response","data","catch","error","getGroupMembers","getGroupSettings","open","GroupMembers","props","handleExport","group","state","group_id","setState","optionsModalIsOpen","post","info","handlePendingRequests","history","push","handleModalOpen","handleModalClose","fetchedGroupMembers","userIsAdmin","members","children","acceptedMembers","pendingRequests","forEach","member","user_accepted","group_accepted","settings","language","texts","groupMembers","options","label","export","style","handle","membersPath","goBack","name","Component","propTypes","object","bool","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport GroupMembersList from \"./GroupMembersList\";\r\nimport MembersOptionsModal from \"./OptionsModal\";\r\nimport GroupMembersAdminOptions from \"./GroupMembersAdminOptions\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Log from \"./Log\";\r\nimport GroupMembersNavbar from \"./GroupMembersNavbar\";\r\n\r\nconst getGroupChildren = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/children`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\n\r\nconst getGroupMembers = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/members`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\nconst getGroupSettings = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/settings`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        open: \"\"\r\n      };\r\n    });\r\n};\r\n\r\nclass GroupMembers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { group } = this.props;\r\n    this.state = {\r\n      fetchedGroupMembers: false,\r\n      group,\r\n      optionsModalIsOpen: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { userIsAdmin } = this.props;\r\n    const { group } = this.state;\r\n    const { group_id: groupId } = group;\r\n    const members = await getGroupMembers(groupId);\r\n    const children = await getGroupChildren(groupId);\r\n    const acceptedMembers = [];\r\n    let pendingRequests = 0;\r\n    members.forEach(member => {\r\n      if (member.user_accepted && member.group_accepted) {\r\n        acceptedMembers.push(member);\r\n      } else if (member.user_accepted && !member.group_accepted) {\r\n        pendingRequests += 1;\r\n      }\r\n    });\r\n    const settings = await getGroupSettings(groupId);\r\n    this.setState({\r\n      members: acceptedMembers,\r\n      children,\r\n      settings,\r\n      userIsAdmin,\r\n      pendingRequests,\r\n      fetchedGroupMembers: true\r\n    });\r\n  }\r\n\r\n  handleExport = () => {\r\n    const { group } = this.state;\r\n    const { group_id: groupId } = group;\r\n    this.setState({ optionsModalIsOpen: false });\r\n    axios\r\n      .post(`/api/groups/${groupId}/contacts/export`)\r\n      .then(response => {\r\n        Log.info(response);\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n      });\r\n  };\r\n\r\n  handlePendingRequests = () => {\r\n    const { history } = this.props;\r\n    const { group } = this.state;\r\n    const { group_id: groupId } = group;\r\n    history.push(`/groups/${groupId}/members/pending`);\r\n  };\r\n\r\n  handleModalOpen = () => {\r\n    this.setState({ optionsModalIsOpen: true });\r\n  };\r\n\r\n  handleModalClose = () => {\r\n    this.setState({ optionsModalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const {\r\n      fetchedGroupMembers,\r\n      group,\r\n      members,\r\n      userIsAdmin,\r\n      settings,\r\n      children,\r\n      pendingRequests,\r\n      optionsModalIsOpen\r\n    } = this.state;\r\n    const { language } = this.props;\r\n    const texts = Texts[language].groupMembers;\r\n    const options = [\r\n      {\r\n        label: texts.export,\r\n        style: \"optionsModalButton\",\r\n        handle: this.handleExport\r\n      }\r\n    ];\r\n    const membersPath = `/groups/${group.group_id}/members`;\r\n    return fetchedGroupMembers ? (\r\n      <React.Fragment>\r\n        <MembersOptionsModal\r\n          isOpen={optionsModalIsOpen}\r\n          options={options}\r\n          handleClose={this.handleModalClose}\r\n        />\r\n        <GroupMembersNavbar />\r\n        <div id=\"groupMembersContainer\">\r\n          <div className=\"row no-gutters\" id=\"groupMembersHeaderContainer\">\r\n            <div className=\"col-2-10\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"transparentButton center\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i className=\"fas fa-arrow-left\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"col-5-10 \">\r\n              <h1 className=\"verticalCenter\">{group.name}</h1>\r\n            </div>\r\n            <div className=\"col-2-10 \">\r\n              {userIsAdmin && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"transparentButton center\"\r\n                  onClick={this.handlePendingRequests}\r\n                >\r\n                  <i className=\"fas fa-user-friends\" />\r\n                  {pendingRequests > 0 && (\r\n                    <span className=\"members-badge\">{pendingRequests}</span>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"col-1-10 \">\r\n              {userIsAdmin && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"transparentButton center\"\r\n                  onClick={this.handleModalOpen}\r\n                >\r\n                  <i className=\"fas fa-ellipsis-v\" />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              path={`${membersPath}/parents`}\r\n              render={props => (\r\n                <React.Fragment>\r\n                  {userIsAdmin && (\r\n                    <GroupMembersAdminOptions\r\n                      groupIsOpen={settings.open}\r\n                      groupId={group.group_id}\r\n                    />\r\n                  )}\r\n                  <GroupMembersList\r\n                    key=\"parents\"\r\n                    {...props}\r\n                    members={members}\r\n                    groupId={group.group_id}\r\n                    userIsAdmin={userIsAdmin}\r\n                    list=\"parents\"\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              path={`${membersPath}/children`}\r\n              render={props => (\r\n                <GroupMembersList\r\n                  key=\"children\"\r\n                  {...props}\r\n                  members={children}\r\n                  groupId={group.group_id}\r\n                  userIsAdmin={userIsAdmin}\r\n                  list=\"children\"\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    ) : (\r\n      <LoadingSpinner />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withLanguage(GroupMembers);\r\n\r\nGroupMembers.propTypes = {\r\n  group: PropTypes.object,\r\n  history: PropTypes.object,\r\n  userIsAdmin: PropTypes.bool,\r\n  language: PropTypes.string\r\n};\r\n"]},"metadata":{},"sourceType":"module"}