{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\Reply.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Skeleton } from \"antd\";\nimport axios from \"axios\";\nimport * as path from \"lodash.get\";\nimport ConfirmDialog from \"./ConfirmDialog\";\nimport Avatar from \"./Avatar\";\nimport TimeAgo from \"./TimeAgo\";\nimport withLanguage from \"./LanguageContext\";\nimport Texts from \"../Constants/Texts\";\nimport Log from \"./Log\";\n\nvar Reply = /*#__PURE__*/function (_React$Component) {\n  _inherits(Reply, _React$Component);\n\n  var _super = _createSuper(Reply);\n\n  function Reply(props) {\n    var _this;\n\n    _classCallCheck(this, Reply);\n\n    _this = _super.call(this, props);\n\n    _this.handleDelete = function () {\n      var _this$state = _this.state,\n          reply = _this$state.reply,\n          deleteId = _this$state.deleteId;\n      var announcementId = reply.announcement_id;\n      var _this$props = _this.props,\n          groupId = _this$props.groupId,\n          handleRefresh = _this$props.handleRefresh;\n      var replyId = deleteId;\n      axios.delete(\"/api/groups/\".concat(groupId, \"/announcements/\").concat(announcementId, \"/replies/\").concat(replyId)).then(function (response) {\n        Log.info(response);\n        handleRefresh();\n      }).catch(function (error) {\n        Log.error(error);\n      });\n    };\n\n    _this.handleConfirmDialogClose = function (choice) {\n      if (choice === \"agree\") {\n        _this.handleDelete();\n      }\n\n      _this.setState({\n        deleteId: \"\",\n        confirmDialogIsOpen: false\n      });\n    };\n\n    _this.handleConfirmDialogOpen = function (id) {\n      _this.setState({\n        deleteId: id,\n        confirmDialogIsOpen: true\n      });\n    };\n\n    var _reply = _this.props.reply;\n    _this.state = {\n      reply: _reply,\n      fetchedProfile: false,\n      confirmDialogIsOpen: false,\n      deleteId: \"\",\n      profile: {}\n    };\n    return _this;\n  }\n\n  _createClass(Reply, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var reply = this.state.reply;\n      axios.get(\"/api/users/\".concat(reply.user_id, \"/profile\")).then(function (response) {\n        _this2.setState({\n          fetchedProfile: true,\n          profile: response.data\n        });\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedProfile: true,\n          profile: {\n            image: {\n              path: \"\"\n            },\n            family_name: \"\",\n            given_name: \"\"\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          language = _this$props2.language,\n          userIsAdmin = _this$props2.userIsAdmin;\n      var texts = Texts[language].reply;\n      var _this$state2 = this.state,\n          profile = _this$state2.profile,\n          reply = _this$state2.reply,\n          confirmDialogIsOpen = _this$state2.confirmDialogIsOpen,\n          fetchedProfile = _this$state2.fetchedProfile;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"announcementReplyContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ConfirmDialog, {\n        isOpen: confirmDialogIsOpen,\n        title: texts.confirmDialogTitle,\n        handleClose: this.handleConfirmDialogClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"timeAgoContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TimeAgo, {\n        date: reply.createdAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      })), fetchedProfile ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        thumbnail: path(profile, [\"image\", \"path\"]),\n        route: \"/profiles/\".concat(profile.user_id, \"/info\"),\n        style: {\n          transform: \"scale(0.8)\"\n        },\n        disabled: profile.suspended,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"verticalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"\".concat(profile.given_name, \" \").concat(profile.family_name))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, (JSON.parse(localStorage.getItem(\"user\")).id === profile.user_id || userIsAdmin) && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: function onClick() {\n          return _this3.handleConfirmDialogOpen(reply.reply_id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      })))) : /*#__PURE__*/React.createElement(Skeleton, {\n        active: true,\n        avatar: true,\n        paragraph: {\n          rows: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"announcementReplyMainContainer\",\n        className: \"horizontalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, reply.body)));\n    }\n  }]);\n\n  return Reply;\n}(React.Component);\n\nexport default withLanguage(Reply);\nReply.propTypes = {\n  handleRefresh: PropTypes.func,\n  groupId: PropTypes.string,\n  reply: PropTypes.object,\n  language: PropTypes.string,\n  userIsAdmin: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/Reply.js"],"names":["React","PropTypes","Skeleton","axios","path","ConfirmDialog","Avatar","TimeAgo","withLanguage","Texts","Log","Reply","props","handleDelete","state","reply","deleteId","announcementId","announcement_id","groupId","handleRefresh","replyId","delete","then","response","info","catch","error","handleConfirmDialogClose","choice","setState","confirmDialogIsOpen","handleConfirmDialogOpen","id","fetchedProfile","profile","get","user_id","data","image","family_name","given_name","language","userIsAdmin","texts","confirmDialogTitle","createdAt","transform","suspended","JSON","parse","localStorage","getItem","reply_id","rows","body","Component","propTypes","func","string","object","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Skeleton } from \"antd\";\r\nimport axios from \"axios\";\r\nimport * as path from \"lodash.get\";\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport Avatar from \"./Avatar\";\r\nimport TimeAgo from \"./TimeAgo\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport Log from \"./Log\";\r\n\r\nclass Reply extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { reply } = this.props;\r\n    this.state = {\r\n      reply,\r\n      fetchedProfile: false,\r\n      confirmDialogIsOpen: false,\r\n      deleteId: \"\",\r\n      profile: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { reply } = this.state;\r\n    axios\r\n      .get(`/api/users/${reply.user_id}/profile`)\r\n      .then(response => {\r\n        this.setState({ fetchedProfile: true, profile: response.data });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({\r\n          fetchedProfile: true,\r\n          profile: { image: { path: \"\" }, family_name: \"\", given_name: \"\" }\r\n        });\r\n      });\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const { reply, deleteId } = this.state;\r\n    const announcementId = reply.announcement_id;\r\n    const { groupId, handleRefresh } = this.props;\r\n    const replyId = deleteId;\r\n    axios\r\n      .delete(\r\n        `/api/groups/${groupId}/announcements/${announcementId}/replies/${replyId}`\r\n      )\r\n      .then(response => {\r\n        Log.info(response);\r\n        handleRefresh();\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n      });\r\n  };\r\n\r\n  handleConfirmDialogClose = choice => {\r\n    if (choice === \"agree\") {\r\n      this.handleDelete();\r\n    }\r\n    this.setState({ deleteId: \"\", confirmDialogIsOpen: false });\r\n  };\r\n\r\n  handleConfirmDialogOpen = id => {\r\n    this.setState({ deleteId: id, confirmDialogIsOpen: true });\r\n  };\r\n\r\n  render() {\r\n    const { language, userIsAdmin } = this.props;\r\n    const texts = Texts[language].reply;\r\n    const { profile, reply, confirmDialogIsOpen, fetchedProfile } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"announcementReplyContainer\">\r\n          <ConfirmDialog\r\n            isOpen={confirmDialogIsOpen}\r\n            title={texts.confirmDialogTitle}\r\n            handleClose={this.handleConfirmDialogClose}\r\n          />\r\n          <div className=\"row no-gutters\" id=\"timeAgoContainer\">\r\n            <TimeAgo date={reply.createdAt} />\r\n          </div>\r\n          {fetchedProfile ? (\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-2-10\">\r\n                <Avatar\r\n                  thumbnail={path(profile, [\"image\", \"path\"])}\r\n                  route={`/profiles/${profile.user_id}/info`}\r\n                  style={{ transform: \"scale(0.8)\" }}\r\n                  disabled={profile.suspended}\r\n                />\r\n              </div>\r\n              <div className=\"col-6-10\">\r\n                <h1 className=\"verticalCenter\">\r\n                  {`${profile.given_name} ${profile.family_name}`}\r\n                </h1>\r\n              </div>\r\n              <div className=\"col-2-10\">\r\n                {(JSON.parse(localStorage.getItem(\"user\")).id ===\r\n                  profile.user_id ||\r\n                  userIsAdmin) && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"transparentButton center\"\r\n                    onClick={() => this.handleConfirmDialogOpen(reply.reply_id)}\r\n                  >\r\n                    <i className=\"fas fa-times\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Skeleton active avatar paragraph={{ rows: 0 }} />\r\n          )}\r\n        </div>\r\n        <div id=\"announcementReplyMainContainer\" className=\"horizontalCenter\">\r\n          <h1>{reply.body}</h1>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withLanguage(Reply);\r\n\r\nReply.propTypes = {\r\n  handleRefresh: PropTypes.func,\r\n  groupId: PropTypes.string,\r\n  reply: PropTypes.object,\r\n  language: PropTypes.string,\r\n  userIsAdmin: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}