{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\NotificationsModal.js\";\nimport Modal from \"react-modal\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Waypoint } from \"react-waypoint\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport Log from \"./Log\";\nModal.setAppElement(\"#root\");\n\nvar getMyNotifications = function getMyNotifications(userId, page) {\n  return axios.get(\"/api/users/\".concat(userId, \"/notifications\"), {\n    params: {\n      page: page\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar NotificationsModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(NotificationsModal, _React$Component);\n\n  var _super = _createSuper(NotificationsModal);\n\n  function NotificationsModal() {\n    var _this;\n\n    _classCallCheck(this, NotificationsModal);\n\n    _this = _super.call(this);\n\n    _this.closeModal = function () {\n      var handleClose = _this.props.handleClose;\n      handleClose();\n    };\n\n    _this.afterOpenModal = function () {};\n\n    _this.loadMoreNotifications = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state, notifications, user_id, page, newNotifications;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, notifications = _this$state.notifications, user_id = _this$state.user_id;\n              page = Math.floor(notifications.length / 10);\n              _context.next = 4;\n              return getMyNotifications(user_id, page);\n\n            case 4:\n              newNotifications = _context.sent;\n\n              _this.setState({\n                notifications: notifications.concat(newNotifications),\n                fetchedAll: newNotifications.length < 10\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      notifications: [],\n      user_id: JSON.parse(localStorage.getItem(\"user\")).id,\n      fetchedAll: false\n    };\n    return _this;\n  }\n\n  _createClass(NotificationsModal, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var user_id, notifications;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user_id = this.state.user_id;\n                _context2.next = 3;\n                return getMyNotifications(user_id, 0);\n\n              case 3:\n                notifications = _context2.sent;\n                this.setState({\n                  notifications: notifications\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          language = _this$props.language,\n          isOpen = _this$props.isOpen;\n      var _this$state2 = this.state,\n          fetchedAll = _this$state2.fetchedAll,\n          notifications = _this$state2.notifications;\n      var texts = Texts[language].myFamiliesShareScreen;\n      var modalStyle = {\n        overlay: {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: \"rgba(0, 0, 0, 0.8)\"\n        },\n        content: {\n          top: \"5rem\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          position: \"absolute\",\n          backgroundColor: \"#ffffff\",\n          width: \"90%\",\n          height: \"85%\",\n          borderRadius: \"5px\"\n        }\n      };\n      return /*#__PURE__*/React.createElement(Modal, {\n        className: \"modal-container\",\n        style: modalStyle,\n        isOpen: isOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Notifications Modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"myNotificationsContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-9-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          fontSize: \"1.4rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, texts.myNotifications)), /*#__PURE__*/React.createElement(\"div\", {\n        clasName: \"col-1-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparentButton\",\n        type: \"button\",\n        onClick: this.closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, notifications.map(function (notification, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }, index === notifications.length - 4 && !fetchedAll ? /*#__PURE__*/React.createElement(Waypoint, {\n          onEnter: _this2.loadMoreNotifications,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"myNotification\",\n          style: !notification.read ? {\n            backgroundColor: \"#F7F7F7\"\n          } : {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }\n        }, notification.header), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }\n        }, notification.description))) : /*#__PURE__*/React.createElement(\"div\", {\n          id: \"myNotification\",\n          style: !notification.read ? {\n            backgroundColor: \"#F7F7F7\"\n          } : {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }\n        }, notification.header), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, notification.description)));\n      }))));\n    }\n  }]);\n\n  return NotificationsModal;\n}(React.Component);\n\nNotificationsModal.propTypes = {\n  isOpen: PropTypes.bool,\n  handleClose: PropTypes.func,\n  language: PropTypes.string\n};\nexport default withLanguage(NotificationsModal);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/NotificationsModal.js"],"names":["Modal","React","PropTypes","axios","Waypoint","Texts","withLanguage","Log","setAppElement","getMyNotifications","userId","page","get","params","then","response","data","catch","error","NotificationsModal","closeModal","handleClose","props","afterOpenModal","loadMoreNotifications","state","notifications","user_id","Math","floor","length","newNotifications","setState","concat","fetchedAll","JSON","parse","localStorage","getItem","id","language","isOpen","texts","myFamiliesShareScreen","modalStyle","overlay","position","top","left","right","bottom","backgroundColor","content","transform","width","height","borderRadius","fontSize","myNotifications","map","notification","index","read","header","description","Component","propTypes","bool","func","string"],"mappings":"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","sourcesContent":["import Modal from \"react-modal\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Log from \"./Log\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst getMyNotifications = (userId, page) => {\r\n  return axios\r\n    .get(`/api/users/${userId}/notifications`, { params: { page } })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\n\r\nclass NotificationsModal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notifications: [],\r\n      user_id: JSON.parse(localStorage.getItem(\"user\")).id,\r\n      fetchedAll: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { user_id } = this.state;\r\n    const notifications = await getMyNotifications(user_id, 0);\r\n    this.setState({ notifications });\r\n  }\r\n\r\n  closeModal = () => {\r\n    const { handleClose } = this.props;\r\n    handleClose();\r\n  };\r\n\r\n  afterOpenModal = () => {};\r\n\r\n  loadMoreNotifications = async () => {\r\n    const { notifications, user_id } = this.state;\r\n    const page = Math.floor(notifications.length / 10);\r\n    const newNotifications = await getMyNotifications(user_id, page);\r\n    this.setState({\r\n      notifications: notifications.concat(newNotifications),\r\n      fetchedAll: newNotifications.length < 10\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { language, isOpen } = this.props;\r\n    const { fetchedAll, notifications } = this.state;\r\n    const texts = Texts[language].myFamiliesShareScreen;\r\n    const modalStyle = {\r\n      overlay: {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\"\r\n      },\r\n      content: {\r\n        top: \"5rem\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        position: \"absolute\",\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"90%\",\r\n        height: \"85%\",\r\n        borderRadius: \"5px\"\r\n      }\r\n    };\r\n    return (\r\n      <Modal\r\n        className=\"modal-container\"\r\n        style={modalStyle}\r\n        isOpen={isOpen}\r\n        onAfterOpen={this.afterOpenModal}\r\n        onRequestClose={this.closeModal}\r\n        contentLabel=\"Notifications Modal\"\r\n      >\r\n        <div id=\"myNotificationsContainer\">\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-9-10\">\r\n              <h1 style={{ fontSize: \"1.4rem\" }}>{texts.myNotifications}</h1>\r\n            </div>\r\n            <div clasName=\"col-1-10\">\r\n              <button\r\n                className=\"transparentButton\"\r\n                type=\"button\"\r\n                onClick={this.closeModal}\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <ul>\r\n            {notifications.map((notification, index) => (\r\n              <li key={index}>\r\n                {index === notifications.length - 4 && !fetchedAll ? (\r\n                  <Waypoint onEnter={this.loadMoreNotifications}>\r\n                    <div\r\n                      id=\"myNotification\"\r\n                      style={\r\n                        !notification.read ? { backgroundColor: \"#F7F7F7\" } : {}\r\n                      }\r\n                    >\r\n                      <h1>{notification.header}</h1>\r\n                      <p>{notification.description}</p>\r\n                    </div>\r\n                  </Waypoint>\r\n                ) : (\r\n                  <div\r\n                    id=\"myNotification\"\r\n                    style={\r\n                      !notification.read ? { backgroundColor: \"#F7F7F7\" } : {}\r\n                    }\r\n                  >\r\n                    <h1>{notification.header}</h1>\r\n                    <p>{notification.description}</p>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nNotificationsModal.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n  language: PropTypes.string\r\n};\r\n\r\nexport default withLanguage(NotificationsModal);\r\n"]},"metadata":{},"sourceType":"module"}