{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\ForgotPasswordScreen.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport Images from \"../Constants/Images\";\nimport BackNavigation from \"./BackNavigation\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Log from \"./Log\";\n\nvar ForgotPasswordScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(ForgotPasswordScreen, _React$Component);\n\n  var _super = _createSuper(ForgotPasswordScreen);\n\n  function ForgotPasswordScreen() {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      formIsValidated: false,\n      sendingEmail: false\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      var email = _this.state.email;\n      var _this$props = _this.props,\n          language = _this$props.language,\n          enqueueSnackbar = _this$props.enqueueSnackbar;\n      var snackMessage;\n      event.preventDefault();\n\n      if (_this.validate()) {\n        _this.setState({\n          sendingEmail: true\n        });\n\n        axios.post(\"/api/users/forgotpassword\", {\n          email: email,\n          origin: window.isNative ? \"native\" : \"browser\"\n        }).then(function (response) {\n          Log.info(response);\n          snackMessage = Texts[language].forgotPasswordScreen.success;\n          enqueueSnackbar(snackMessage, {\n            variant: \"success\"\n          });\n        }).catch(function (error) {\n          if (error.response.status === 404) {\n            snackMessage = Texts[language].forgotPasswordScreen.notExistErr;\n          } else {\n            snackMessage = Texts[language].forgotPasswordScreen.err;\n          }\n\n          enqueueSnackbar(snackMessage, {\n            variant: \"error\"\n          });\n        }).then(function () {\n          _this.setState({\n            sendingEmail: false\n          });\n        });\n      }\n\n      _this.setState({\n        formIsValidated: true\n      });\n    };\n\n    _this.validate = function () {\n      var language = _this.props.language;\n      var texts = Texts[language].forgotPasswordScreen;\n\n      if (_this.formEl.checkValidity() === false) {\n        var _elem = _this.formEl[0];\n\n        var _errorLabel = document.getElementById(\"\".concat(_elem.name, \"Err\"));\n\n        if (!_elem.validity.valid) {\n          if (_elem.validity.valueMissing) {\n            _errorLabel.textContent = texts.requiredErr;\n          }\n        } else {\n          _errorLabel.textContent = \"\";\n        }\n\n        return false;\n      }\n\n      var elem = _this.formEl[0];\n      var errorLabel = document.getElementById(\"\".concat(elem.name, \"Err\"));\n      errorLabel.textContent = \"\";\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPasswordScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formIsValidated = _this$state.formIsValidated,\n          sendingEmail = _this$state.sendingEmail,\n          email = _this$state.email;\n      var _this$props2 = this.props,\n          language = _this$props2.language,\n          history = _this$props2.history;\n      var formClass = [];\n\n      if (formIsValidated) {\n        formClass.push(\"was-validated\");\n      }\n\n      var texts = Texts[language].forgotPasswordScreen;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, sendingEmail ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(BackNavigation, {\n        title: texts.backNavTitle,\n        onClick: function onClick() {\n          return history.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"forgotPasswordContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"forgotPasswordLogo\",\n        className: \"horizontalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"center\",\n        src: Images.familyShareLogo,\n        alt: \"families share logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"forgotPasswordMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, texts.prompt), /*#__PURE__*/React.createElement(\"form\", {\n        ref: function ref(form) {\n          _this2.formEl = form;\n        },\n        className: formClass,\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        value: email,\n        placeholder: texts.email,\n        className: \"form-control\",\n        onChange: this.handleInputChange,\n        name: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"emailErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, texts.send)))));\n    }\n  }]);\n\n  return ForgotPasswordScreen;\n}(React.Component);\n\nexport default withSnackbar(withLanguage(ForgotPasswordScreen));\nForgotPasswordScreen.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object,\n  enqueueSnackbar: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/ForgotPasswordScreen.js"],"names":["React","axios","withSnackbar","PropTypes","Texts","withLanguage","Images","BackNavigation","LoadingSpinner","Log","ForgotPasswordScreen","state","email","formIsValidated","sendingEmail","handleInputChange","event","setState","target","value","handleSubmit","props","language","enqueueSnackbar","snackMessage","preventDefault","validate","post","origin","window","isNative","then","response","info","forgotPasswordScreen","success","variant","catch","error","status","notExistErr","err","texts","formEl","checkValidity","elem","errorLabel","document","getElementById","name","validity","valid","valueMissing","textContent","requiredErr","history","formClass","push","backNavTitle","goBack","familyShareLogo","prompt","form","send","Component","propTypes","string","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport PropTypes from \"prop-types\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Images from \"../Constants/Images\";\r\nimport BackNavigation from \"./BackNavigation\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Log from \"./Log\";\r\n\r\nclass ForgotPasswordScreen extends React.Component {\r\n  state = {\r\n    email: ``,\r\n    formIsValidated: false,\r\n    sendingEmail: false\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { email } = this.state;\r\n    const { language, enqueueSnackbar } = this.props;\r\n    let snackMessage;\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      this.setState({ sendingEmail: true });\r\n      axios\r\n        .post(\"/api/users/forgotpassword\", {\r\n          email,\r\n          origin: window.isNative ? \"native\" : \"browser\"\r\n        })\r\n        .then(response => {\r\n          Log.info(response);\r\n          snackMessage = Texts[language].forgotPasswordScreen.success;\r\n          enqueueSnackbar(snackMessage, { variant: \"success\" });\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 404) {\r\n            snackMessage = Texts[language].forgotPasswordScreen.notExistErr;\r\n          } else {\r\n            snackMessage = Texts[language].forgotPasswordScreen.err;\r\n          }\r\n          enqueueSnackbar(snackMessage, { variant: \"error\" });\r\n        })\r\n        .then(() => {\r\n          this.setState({ sendingEmail: false });\r\n        });\r\n    }\r\n    this.setState({ formIsValidated: true });\r\n  };\r\n\r\n  validate = () => {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].forgotPasswordScreen;\r\n    if (this.formEl.checkValidity() === false) {\r\n      const elem = this.formEl[0];\r\n      const errorLabel = document.getElementById(`${elem.name}Err`);\r\n      if (!elem.validity.valid) {\r\n        if (elem.validity.valueMissing) {\r\n          errorLabel.textContent = texts.requiredErr;\r\n        }\r\n      } else {\r\n        errorLabel.textContent = \"\";\r\n      }\r\n      return false;\r\n    }\r\n    const elem = this.formEl[0];\r\n    const errorLabel = document.getElementById(`${elem.name}Err`);\r\n    errorLabel.textContent = \"\";\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const { formIsValidated, sendingEmail, email } = this.state;\r\n    const { language, history } = this.props;\r\n    const formClass = [];\r\n    if (formIsValidated) {\r\n      formClass.push(\"was-validated\");\r\n    }\r\n    const texts = Texts[language].forgotPasswordScreen;\r\n    return (\r\n      <React.Fragment>\r\n        {sendingEmail ? <LoadingSpinner /> : <div />}\r\n        <BackNavigation\r\n          title={texts.backNavTitle}\r\n          onClick={() => history.goBack()}\r\n        />\r\n        <div id=\"forgotPasswordContainer\">\r\n          <div id=\"forgotPasswordLogo\" className=\"horizontalCenter\">\r\n            <img\r\n              className=\"center\"\r\n              src={Images.familyShareLogo}\r\n              alt=\"families share logo\"\r\n            />\r\n          </div>\r\n          <div id=\"forgotPasswordMain\">\r\n            <h1>{texts.prompt}</h1>\r\n            <form\r\n              ref={form => {\r\n                this.formEl = form;\r\n              }}\r\n              className={formClass}\r\n              noValidate\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder={texts.email}\r\n                className=\"form-control\"\r\n                onChange={this.handleInputChange}\r\n                name=\"email\"\r\n                required\r\n              />\r\n              <span className=\"invalid-feedback\" id=\"emailErr\" />\r\n              <button type=\"button\" onClick={this.handleSubmit}>\r\n                {texts.send}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(withLanguage(ForgotPasswordScreen));\r\n\r\nForgotPasswordScreen.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object,\r\n  enqueueSnackbar: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}