{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\LogInForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { withSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport authenticationActions from \"../Actions/AuthenticationActions\";\n\nvar LogInForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LogInForm, _React$Component);\n\n  var _super = _createSuper(LogInForm);\n\n  function LogInForm(props) {\n    var _this;\n\n    _classCallCheck(this, LogInForm);\n\n    _this = _super.call(this, props);\n\n    _this.validate = function () {\n      var language = _this.props.language;\n      var acceptTerms = _this.state.acceptTerms;\n      var formLength = _this.formEl.length;\n      var texts = Texts[language].logInForm;\n\n      if (_this.formEl.checkValidity() === false || acceptTerms === false) {\n        for (var i = 0; i < formLength; i += 1) {\n          var elem = _this.formEl[i];\n          var errorLabel = document.getElementById(\"\".concat(elem.name, \"Err\"));\n\n          if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\n            if (!elem.validity.valid) {\n              if (elem.validity.valueMissing) {\n                errorLabel.textContent = texts.requiredErr;\n              } else if (elem.validity.typeMismatch) {\n                errorLabel.textContent = texts.typeMismatchErr;\n              } else if (elem.validity.tooShort) {\n                errorLabel.textContent = texts.tooShortErr;\n              }\n            } else {\n              errorLabel.textContent = \"\";\n            }\n          }\n        }\n\n        return false;\n      }\n\n      for (var _i = 0; _i < formLength; _i += 1) {\n        var _elem = _this.formEl[_i];\n\n        var _errorLabel = document.getElementById(\"\".concat(_elem.name, \"Err\"));\n\n        if (_errorLabel && _elem.nodeName.toLowerCase() !== \"button\") {\n          _errorLabel.textContent = \"\";\n        }\n      }\n\n      return true;\n    };\n\n    _this.submit = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          history = _this$props.history;\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var deviceToken = localStorage.getItem(\"deviceToken\");\n      var origin = window.isNative ? \"native\" : \"web\";\n      dispatch(authenticationActions.login(email, password, history, origin, deviceToken));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validate()) {\n        _this.submit();\n      }\n\n      _this.setState({\n        formIsValidated: true\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      formIsValidated: false,\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LogInForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          error = _this$props2.error,\n          language = _this$props2.language,\n          enqueueSnackbar = _this$props2.enqueueSnackbar;\n      var _this$state2 = this.state,\n          formIsValidated = _this$state2.formIsValidated,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      var texts = Texts[language].logInForm;\n\n      if (error) {\n        enqueueSnackbar(texts.authenticationErr, {\n          variant: \"error\",\n          preventDuplicate: true\n        });\n      }\n\n      var formClass = [];\n\n      if (formIsValidated) {\n        formClass.push(\"was-validated\");\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        ref: function ref(form) {\n          _this2.formEl = form;\n        },\n        onSubmit: this.handleSubmit,\n        className: formClass,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: texts.email,\n        name: \"email\",\n        className: \"logInInputField horizontalCenter form-control\",\n        onChange: this.handleChange,\n        required: true,\n        value: email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"emailErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: texts.password,\n        type: \"password\",\n        name: \"password\",\n        className: \"logInInputField horizontalCenter form-control\",\n        onChange: this.handleChange,\n        required: true,\n        minLength: 8,\n        value: password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"passwordErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        style: email && password ? {\n          backgroundColor: \"#00838F\",\n          color: \"#ffffff\"\n        } : {},\n        className: \"logInConfirmButton horizontalCenter\",\n        value: texts.confirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return LogInForm;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var authentication = state.authentication;\n  var error = authentication.error;\n  return {\n    error: error\n  };\n}\n\nexport default connect(mapStateToProps)(withSnackbar(withRouter(withLanguage(LogInForm))));\nLogInForm.propTypes = {\n  enqueueSnackbar: PropTypes.func,\n  language: PropTypes.string,\n  history: PropTypes.object,\n  error: PropTypes.bool,\n  dispatch: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/LogInForm.js"],"names":["React","connect","withRouter","withSnackbar","PropTypes","Texts","withLanguage","authenticationActions","LogInForm","props","validate","language","acceptTerms","state","formLength","formEl","length","texts","logInForm","checkValidity","i","elem","errorLabel","document","getElementById","name","nodeName","toLowerCase","validity","valid","valueMissing","textContent","requiredErr","typeMismatch","typeMismatchErr","tooShort","tooShortErr","submit","dispatch","history","email","password","deviceToken","localStorage","getItem","origin","window","isNative","login","handleSubmit","event","preventDefault","setState","formIsValidated","handleChange","target","value","error","enqueueSnackbar","authenticationErr","variant","preventDuplicate","formClass","push","form","backgroundColor","color","confirm","Component","mapStateToProps","authentication","propTypes","func","string","object","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport PropTypes from \"prop-types\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport authenticationActions from \"../Actions/AuthenticationActions\";\r\n\r\nclass LogInForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formIsValidated: false,\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  validate = () => {\r\n    const { language } = this.props;\r\n    const { acceptTerms } = this.state;\r\n    const formLength = this.formEl.length;\r\n    const texts = Texts[language].logInForm;\r\n    if (this.formEl.checkValidity() === false || acceptTerms === false) {\r\n      for (let i = 0; i < formLength; i += 1) {\r\n        const elem = this.formEl[i];\r\n        const errorLabel = document.getElementById(`${elem.name}Err`);\r\n        if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n          if (!elem.validity.valid) {\r\n            if (elem.validity.valueMissing) {\r\n              errorLabel.textContent = texts.requiredErr;\r\n            } else if (elem.validity.typeMismatch) {\r\n              errorLabel.textContent = texts.typeMismatchErr;\r\n            } else if (elem.validity.tooShort) {\r\n              errorLabel.textContent = texts.tooShortErr;\r\n            }\r\n          } else {\r\n            errorLabel.textContent = \"\";\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    for (let i = 0; i < formLength; i += 1) {\r\n      const elem = this.formEl[i];\r\n      const errorLabel = document.getElementById(`${elem.name}Err`);\r\n      if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n        errorLabel.textContent = \"\";\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  submit = () => {\r\n    const { dispatch, history } = this.props;\r\n    const { email, password } = this.state;\r\n    const deviceToken = localStorage.getItem(\"deviceToken\");\r\n    const origin = window.isNative ? \"native\" : \"web\";\r\n    dispatch(\r\n      authenticationActions.login(email, password, history, origin, deviceToken)\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.validate()) {\r\n      this.submit();\r\n    }\r\n    this.setState({ formIsValidated: true });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name } = event.target;\r\n    const { value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { error, language, enqueueSnackbar } = this.props;\r\n    const { formIsValidated, email, password } = this.state;\r\n    const texts = Texts[language].logInForm;\r\n    if (error) {\r\n      enqueueSnackbar(texts.authenticationErr, {\r\n        variant: \"error\",\r\n        preventDuplicate: true\r\n      });\r\n    }\r\n    const formClass = [];\r\n    if (formIsValidated) {\r\n      formClass.push(\"was-validated\");\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <form\r\n          ref={form => {\r\n            this.formEl = form;\r\n          }}\r\n          onSubmit={this.handleSubmit}\r\n          className={formClass}\r\n          noValidate\r\n        >\r\n          <div className=\"row no-gutters\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder={texts.email}\r\n              name=\"email\"\r\n              className=\"logInInputField horizontalCenter form-control\"\r\n              onChange={this.handleChange}\r\n              required\r\n              value={email}\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"emailErr\" />\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <input\r\n              placeholder={texts.password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"logInInputField horizontalCenter form-control\"\r\n              onChange={this.handleChange}\r\n              required\r\n              minLength={8}\r\n              value={password}\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"passwordErr\" />\r\n          </div>\r\n          <div className=\"row no-gutters\">\r\n            <input\r\n              type=\"submit\"\r\n              style={\r\n                email && password\r\n                  ? { backgroundColor: \"#00838F\", color: \"#ffffff\" }\r\n                  : {}\r\n              }\r\n              className=\"logInConfirmButton horizontalCenter\"\r\n              value={texts.confirm}\r\n            />\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { authentication } = state;\r\n  const { error } = authentication;\r\n  return {\r\n    error\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(\r\n  withSnackbar(withRouter(withLanguage(LogInForm)))\r\n);\r\n\r\nLogInForm.propTypes = {\r\n  enqueueSnackbar: PropTypes.func,\r\n  language: PropTypes.string,\r\n  history: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  dispatch: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}