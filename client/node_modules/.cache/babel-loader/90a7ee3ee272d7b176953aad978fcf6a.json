{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\AgendaView.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport withLanguage from \"./LanguageContext\";\nimport TimeslotsList from \"./TimeslotsList\";\n\nvar AgendaView = function AgendaView(_ref) {\n  var events = _ref.events;\n\n  var getDates = function getDates() {\n    var timeslots = JSON.parse(JSON.stringify(events));\n    var dates = timeslots.map(function (event) {\n      return event.start;\n    });\n    dates = dates.sort(function (a, b) {\n      return new Date(a) - new Date(b);\n    });\n    var uniqueDates = [];\n    var temp = [];\n    dates.forEach(function (date) {\n      var t = moment(date).format(\"DD-MM-YYYY\");\n\n      if (!temp.includes(t)) {\n        temp.push(t);\n        uniqueDates.push(date);\n      }\n    });\n    return uniqueDates;\n  };\n\n  var getEvents = function getEvents() {\n    var timeslots = JSON.parse(JSON.stringify(events));\n\n    for (var i = 0; i < timeslots.length; i += 1) {\n      timeslots[i].start = {\n        dateTime: timeslots[i].start\n      };\n      timeslots[i].end = {\n        dateTime: timeslots[i].end\n      };\n    }\n\n    return timeslots;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"agendaViewContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TimeslotsList, {\n    timeslots: getEvents(),\n    dates: getDates(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withLanguage(withRouter(AgendaView));\nAgendaView.propTypes = {\n  events: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/AgendaView.js"],"names":["React","PropTypes","withRouter","moment","withLanguage","TimeslotsList","AgendaView","events","getDates","timeslots","JSON","parse","stringify","dates","map","event","start","sort","a","b","Date","uniqueDates","temp","forEach","date","t","format","includes","push","getEvents","i","length","dateTime","end","propTypes","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACjC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAAf,CAAX,CAAlB;AACA,QAAIM,KAAK,GAAGJ,SAAS,CAACK,GAAV,CAAc,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAV;AAAA,KAAnB,CAAZ;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACI,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3B,aAAO,IAAIC,IAAJ,CAASF,CAAT,IAAc,IAAIE,IAAJ,CAASD,CAAT,CAArB;AACD,KAFO,CAAR;AAGA,QAAME,WAAW,GAAG,EAApB;AACA,QAAMC,IAAI,GAAG,EAAb;AACAT,IAAAA,KAAK,CAACU,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,UAAMC,CAAC,GAAGtB,MAAM,CAACqB,IAAD,CAAN,CAAaE,MAAb,CAAoB,YAApB,CAAV;;AACA,UAAI,CAACJ,IAAI,CAACK,QAAL,CAAcF,CAAd,CAAL,EAAuB;AACrBH,QAAAA,IAAI,CAACM,IAAL,CAAUH,CAAV;AACAJ,QAAAA,WAAW,CAACO,IAAZ,CAAiBJ,IAAjB;AACD;AACF,KAND;AAOA,WAAOH,WAAP;AACD,GAhBD;;AAiBA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMpB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAAf,CAAX,CAAlB;;AACA,SAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,SAAS,CAACsB,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC5CrB,MAAAA,SAAS,CAACqB,CAAD,CAAT,CAAad,KAAb,GAAqB;AAAEgB,QAAAA,QAAQ,EAAEvB,SAAS,CAACqB,CAAD,CAAT,CAAad;AAAzB,OAArB;AACAP,MAAAA,SAAS,CAACqB,CAAD,CAAT,CAAaG,GAAb,GAAmB;AAAED,QAAAA,QAAQ,EAAEvB,SAAS,CAACqB,CAAD,CAAT,CAAaG;AAAzB,OAAnB;AACD;;AACD,WAAOxB,SAAP;AACD,GAPD;;AAQA,sBACE;AAAK,IAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEoB,SAAS,EAAnC;AAAuC,IAAA,KAAK,EAAErB,QAAQ,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA/BD;;AAiCA,eAAeJ,YAAY,CAACF,UAAU,CAACI,UAAD,CAAX,CAA3B;AAEAA,UAAU,CAAC4B,SAAX,GAAuB;AACrB3B,EAAAA,MAAM,EAAEN,SAAS,CAACkC;AADG,CAAvB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport TimeslotsList from \"./TimeslotsList\";\r\n\r\nconst AgendaView = ({ events }) => {\r\n  const getDates = () => {\r\n    const timeslots = JSON.parse(JSON.stringify(events));\r\n    let dates = timeslots.map(event => event.start);\r\n    dates = dates.sort((a, b) => {\r\n      return new Date(a) - new Date(b);\r\n    });\r\n    const uniqueDates = [];\r\n    const temp = [];\r\n    dates.forEach(date => {\r\n      const t = moment(date).format(\"DD-MM-YYYY\");\r\n      if (!temp.includes(t)) {\r\n        temp.push(t);\r\n        uniqueDates.push(date);\r\n      }\r\n    });\r\n    return uniqueDates;\r\n  };\r\n  const getEvents = () => {\r\n    const timeslots = JSON.parse(JSON.stringify(events));\r\n    for (let i = 0; i < timeslots.length; i += 1) {\r\n      timeslots[i].start = { dateTime: timeslots[i].start };\r\n      timeslots[i].end = { dateTime: timeslots[i].end };\r\n    }\r\n    return timeslots;\r\n  };\r\n  return (\r\n    <div id=\"agendaViewContainer\">\r\n      <TimeslotsList timeslots={getEvents()} dates={getDates()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withLanguage(withRouter(AgendaView));\r\n\r\nAgendaView.propTypes = {\r\n  events: PropTypes.array\r\n};\r\n"]},"metadata":{},"sourceType":"module"}