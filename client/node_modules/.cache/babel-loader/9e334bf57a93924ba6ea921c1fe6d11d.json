{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\SearchGroupScreen.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport withLanguage from \"./LanguageContext\";\nimport Texts from \"../Constants/Texts\";\nimport GroupList from \"./GroupList\";\nimport AutoComplete from \"./AutoComplete\";\nimport Log from \"./Log\";\n\nvar SearchGroupScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchGroupScreen, _React$Component);\n\n  var _super = _createSuper(SearchGroupScreen);\n\n  function SearchGroupScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SearchGroupScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleKeyPress = function (e) {\n      var searchInput = _this.state.searchInput;\n\n      if (e.key === \"Enter\") {\n        _this.handleSearch(searchInput);\n      }\n    };\n\n    _this.handleSearch = function (val) {\n      var value = val.toLowerCase().trim();\n      var groups = _this.state.groups;\n      var matchingGroups = [];\n      groups.forEach(function (group) {\n        if (group.name.toLowerCase().includes(value)) {\n          matchingGroups.push(group.group_id);\n        }\n      });\n\n      _this.setState({\n        searchedForInput: true,\n        searchInput: value,\n        matchingGroups: matchingGroups\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        searchInput: event.target.value,\n        searchedForInput: false\n      });\n\n      if (event.target.value === \"\") _this.handleSearch(\"\");\n    };\n\n    _this.handleSearchVisibility = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var searchBarIsVisible;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchBarIsVisible = _this.state.searchBarIsVisible;\n              _context.next = 3;\n              return _this.setState({\n                searchBarIsVisible: !searchBarIsVisible\n              });\n\n            case 3:\n              document.getElementById(\"searchGroupInput\").focus();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      searchInput: \"\",\n      searchedForInput: false,\n      matchingGroups: [],\n      groups: [],\n      fetchedGroups: false,\n      searchBarIsVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchGroupScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/groups?searchBy=visibility&visible=true\").then(function (res) {\n        var groups = res.data;\n\n        _this2.setState({\n          fetchedGroups: true,\n          groups: groups\n        });\n\n        _this2.handleSearch(\"\");\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedGroups: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          language = _this$props.language,\n          history = _this$props.history;\n      var _this$state = this.state,\n          fetchedGroups = _this$state.fetchedGroups,\n          searchBarIsVisible = _this$state.searchBarIsVisible,\n          searchInput = _this$state.searchInput,\n          searchedForInput = _this$state.searchedForInput,\n          groups = _this$state.groups,\n          matchingGroups = _this$state.matchingGroups;\n      var texts = Texts[language].searchGroupModal;\n      return fetchedGroups && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"searchGroupBarContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: function onClick() {\n          return history.replace(\"/myfamiliesshare\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-arrow-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-7-10 \",\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"search\",\n        id: \"searchGroupInput\",\n        value: searchInput,\n        placeholder: texts.example,\n        onChange: this.onInputChange,\n        onKeyPress: this.handleKeyPress,\n        style: searchBarIsVisible ? {} : {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        style: searchBarIsVisible ? {\n          display: \"none\"\n        } : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, texts.search)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: this.handleSearchVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      })))), !searchedForInput ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"searchGroupSuggestionsContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AutoComplete, {\n        searchInput: searchInput,\n        entities: groups,\n        handleSearch: this.handleSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"searchGroupResultsContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, texts.results)), /*#__PURE__*/React.createElement(GroupList, {\n        groupIds: matchingGroups,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return SearchGroupScreen;\n}(React.Component);\n\nSearchGroupScreen.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object\n};\nexport default withLanguage(SearchGroupScreen);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/SearchGroupScreen.js"],"names":["React","axios","PropTypes","withLanguage","Texts","GroupList","AutoComplete","Log","SearchGroupScreen","props","handleKeyPress","e","searchInput","state","key","handleSearch","val","value","toLowerCase","trim","groups","matchingGroups","forEach","group","name","includes","push","group_id","setState","searchedForInput","onInputChange","event","target","handleSearchVisibility","searchBarIsVisible","document","getElementById","focus","fetchedGroups","get","then","res","data","catch","error","language","history","texts","searchGroupModal","replace","display","alignItems","example","search","results","Component","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport GroupList from \"./GroupList\";\r\nimport AutoComplete from \"./AutoComplete\";\r\nimport Log from \"./Log\";\r\n\r\nclass SearchGroupScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchInput: \"\",\r\n      searchedForInput: false,\r\n      matchingGroups: [],\r\n      groups: [],\r\n      fetchedGroups: false,\r\n      searchBarIsVisible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/groups?searchBy=visibility&visible=true\")\r\n      .then(res => {\r\n        const groups = res.data;\r\n        this.setState({ fetchedGroups: true, groups });\r\n        this.handleSearch(\"\");\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({ fetchedGroups: true });\r\n      });\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    const { searchInput } = this.state;\r\n    if (e.key === \"Enter\") {\r\n      this.handleSearch(searchInput);\r\n    }\r\n  };\r\n\r\n  handleSearch = val => {\r\n    const value = val.toLowerCase().trim();\r\n    const { groups } = this.state;\r\n    const matchingGroups = [];\r\n    groups.forEach(group => {\r\n      if (group.name.toLowerCase().includes(value)) {\r\n        matchingGroups.push(group.group_id);\r\n      }\r\n    });\r\n    this.setState({\r\n      searchedForInput: true,\r\n      searchInput: value,\r\n      matchingGroups\r\n    });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ searchInput: event.target.value, searchedForInput: false });\r\n    if (event.target.value === \"\") this.handleSearch(\"\");\r\n  };\r\n\r\n  handleSearchVisibility = async () => {\r\n    const { searchBarIsVisible } = this.state;\r\n    await this.setState({ searchBarIsVisible: !searchBarIsVisible });\r\n    document.getElementById(\"searchGroupInput\").focus();\r\n  };\r\n\r\n  render() {\r\n    const { language, history } = this.props;\r\n    const {\r\n      fetchedGroups,\r\n      searchBarIsVisible,\r\n      searchInput,\r\n      searchedForInput,\r\n      groups,\r\n      matchingGroups\r\n    } = this.state;\r\n    const texts = Texts[language].searchGroupModal;\r\n    return (\r\n      fetchedGroups && (\r\n        <React.Fragment>\r\n          <div className=\"row no-gutters\" id=\"searchGroupBarContainer\">\r\n            <div className=\"col-2-10\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"transparentButton center\"\r\n                onClick={() => history.replace(\"/myfamiliesshare\")}\r\n              >\r\n                <i className=\"fas fa-arrow-left\" />\r\n              </button>\r\n            </div>\r\n            <div\r\n              className=\"col-7-10 \"\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <input\r\n                type=\"search\"\r\n                id=\"searchGroupInput\"\r\n                value={searchInput}\r\n                placeholder={texts.example}\r\n                onChange={this.onInputChange}\r\n                onKeyPress={this.handleKeyPress}\r\n                style={searchBarIsVisible ? {} : { display: \"none\" }}\r\n              />\r\n              <h1 style={searchBarIsVisible ? { display: \"none\" } : {}}>\r\n                {texts.search}\r\n              </h1>\r\n            </div>\r\n            <div className=\"col-1-10\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"transparentButton center\"\r\n                onClick={this.handleSearchVisibility}\r\n              >\r\n                <i className=\"fas fa-search\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {!searchedForInput ? (\r\n            <div id=\"searchGroupSuggestionsContainer\">\r\n              <AutoComplete\r\n                searchInput={searchInput}\r\n                entities={groups}\r\n                handleSearch={this.handleSearch}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"row no-gutters\" id=\"searchGroupResultsContainer\">\r\n                <h1>{texts.results}</h1>\r\n              </div>\r\n              <GroupList groupIds={matchingGroups} />\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nSearchGroupScreen.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withLanguage(SearchGroupScreen);\r\n"]},"metadata":{},"sourceType":"module"}