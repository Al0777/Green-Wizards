{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\EditGroupScreen.js\";\nimport React from \"react\";\nimport autosize from \"autosize\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport * as path from \"lodash.get\";\nimport withLanguage from \"./LanguageContext\";\nimport Texts from \"../Constants/Texts\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Log from \"./Log\";\n\nvar dataURLtoFile = function dataURLtoFile(dataurl, filename) {\n  var arr = dataurl.split(\",\");\n  var mime = arr[0].match(/:(.*?);/)[1];\n  var bstr = atob(arr[1]);\n  var n = bstr.length;\n  var u8arr = new Uint8Array(n);\n\n  while (n) {\n    n -= 1;\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n};\n\nvar getGroups = function getGroups() {\n  return axios.get(\"/api/groups\", {\n    params: {\n      searchBy: \"all\"\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getGroup = function getGroup(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      name: \"\",\n      background: \"\",\n      group_id: \"\",\n      image: {\n        path: \"\"\n      },\n      description: \"\",\n      location: \"\",\n      contact_info: \"\",\n      contact_type: \"phone\"\n    };\n  });\n};\n\nvar getGroupSettings = function getGroupSettings(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/settings\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      visible: \"\"\n    };\n  });\n};\n\nvar EditGroupScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditGroupScreen, _React$Component);\n\n  var _super = _createSuper(EditGroupScreen);\n\n  function EditGroupScreen() {\n    var _this;\n\n    _classCallCheck(this, EditGroupScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedGroupData: false\n    };\n\n    _this.validate = function () {\n      var language = _this.props.language;\n      var texts = Texts[language].editGroupScreen;\n      var formLength = _this.formEl.length;\n\n      if (_this.formEl.checkValidity() === false) {\n        for (var i = 0; i < formLength; i += 1) {\n          var elem = _this.formEl[i];\n          var errorLabel = document.getElementById(\"\".concat(elem.name, \"Err\"));\n\n          if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\n            if (!elem.validity.valid) {\n              if (elem.validity.valueMissing) {\n                errorLabel.textContent = texts.requiredErr;\n              } else if (elem.validity.customError) {\n                errorLabel.textContent = texts.nameErr;\n              }\n            } else {\n              errorLabel.textContent = \"\";\n            }\n          }\n        }\n\n        return false;\n      }\n\n      for (var _i = 0; _i < formLength; _i += 1) {\n        var _elem = _this.formEl[_i];\n\n        var _errorLabel = document.getElementById(\"\".concat(_elem.name, \"Err\"));\n\n        if (_errorLabel && _elem.nodeName.toLowerCase() !== \"button\") {\n          _errorLabel.textContent = \"\";\n        }\n      }\n\n      return true;\n    };\n\n    _this.handleMessage = function (event) {\n      var data = JSON.parse(event.data);\n\n      if (data.action === \"fileUpload\") {\n        var image = \"data:image/png;base64, \".concat(data.value);\n\n        _this.setState({\n          image: {\n            path: image\n          },\n          file: dataURLtoFile(image, \"photo.png\")\n        });\n      }\n    };\n\n    _this.submitChanges = function () {\n      var _this$state = _this.state,\n          file = _this$state.file,\n          visible = _this$state.visible,\n          description = _this$state.description,\n          name = _this$state.name,\n          background = _this$state.background,\n          location = _this$state.location,\n          group_id = _this$state.group_id,\n          contactInfo = _this$state.contactInfo,\n          contactType = _this$state.contactType;\n      var history = _this.props.history;\n      var bodyFormData = new FormData();\n\n      if (file !== undefined) {\n        bodyFormData.append(\"photo\", file);\n      }\n\n      bodyFormData.append(\"contact_type\", contactType);\n      bodyFormData.append(\"contact_info\", contactInfo);\n      bodyFormData.append(\"visible\", visible);\n      bodyFormData.append(\"name\", name);\n      bodyFormData.append(\"description\", description);\n      bodyFormData.append(\"background\", background);\n      bodyFormData.append(\"location\", location);\n      axios.patch(\"/api/groups/\".concat(group_id), bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        Log.info(response);\n        history.goBack();\n      }).catch(function (error) {\n        Log.error(error);\n        history.goBack();\n      });\n    };\n\n    _this.handleSave = function () {\n      if (_this.validate()) {\n        _this.submitChanges();\n      }\n\n      _this.setState({\n        formIsValidated: true\n      });\n    };\n\n    _this.handleImageChange = function (event) {\n      if (event.target.files && event.target.files[0]) {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          _this.setState({\n            image: {\n              path: e.target.result\n            },\n            file: file\n          });\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    };\n\n    _this.handleNativeImageChange = function () {\n      window.ReactNativeWebView.postMessage(JSON.stringify({\n        action: \"fileUpload\"\n      }));\n    };\n\n    _this.handleVisibility = function (event) {\n      var visible = event.target.value === \"visible\";\n\n      _this.setState({\n        visible: visible\n      });\n    };\n\n    _this.handleContactType = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"contactInfo\", \"\"), _this$setState));\n    };\n\n    _this.handleChange = function (event) {\n      var language = _this.props.language;\n      var groupNames = _this.state.groupNames;\n      var name = event.target.name;\n      var value = event.target.value;\n\n      if (name === \"name\") {\n        var nameExists = groupNames.filter(function (groupName) {\n          return groupName.toUpperCase() === value.toUpperCase().trim();\n        }).length > 0;\n\n        if (nameExists) {\n          event.target.setCustomValidity(Texts[language].editGroupScreen.nameErr);\n        } else {\n          event.target.setCustomValidity(\"\");\n        }\n      }\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleColorChange = function (color) {\n      _this.setState({\n        background: color.hex\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditGroupScreen, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var match, groupId, groupNames, groups, group, settings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                match = this.props.match;\n                groupId = match.params.groupId;\n                document.addEventListener(\"message\", this.handleMessage, false);\n                groupNames = [];\n                _context.next = 6;\n                return getGroups();\n\n              case 6:\n                groups = _context.sent;\n                _context.next = 9;\n                return getGroup(groupId);\n\n              case 9:\n                group = _context.sent;\n                _context.next = 12;\n                return getGroupSettings(groupId);\n\n              case 12:\n                settings = _context.sent;\n                groups.forEach(function (item) {\n                  return groupNames.push(item.name);\n                });\n                groupNames.splice(groupNames.indexOf(group.name), 1);\n                group.contactType = group.contact_type;\n                delete group.contact_type;\n                group.contactInfo = group.contact_info || \"\";\n                delete group.contact_info;\n                this.setState(_objectSpread(_objectSpread(_objectSpread({\n                  fetchedGroupData: true\n                }, group), settings), {}, {\n                  groupNames: groupNames\n                }));\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"message\", this.handleMessage, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          language = _this$props.language,\n          history = _this$props.history;\n      var _this$state2 = this.state,\n          formIsValidated = _this$state2.formIsValidated,\n          fetchedGroupData = _this$state2.fetchedGroupData,\n          background = _this$state2.background,\n          location = _this$state2.location,\n          visible = _this$state2.visible,\n          contactInfo = _this$state2.contactInfo,\n          contactType = _this$state2.contactType,\n          name = _this$state2.name,\n          image = _this$state2.image,\n          description = _this$state2.description;\n      var texts = Texts[language].editGroupScreen;\n      var formClass = [];\n\n      if (formIsValidated) {\n        formClass.push(\"was-validated\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }\n      }, fetchedGroupData ? /*#__PURE__*/React.createElement(\"form\", {\n        ref: function ref(form) {\n          _this2.formEl = form;\n        },\n        onSubmit: function onSubmit(event) {\n          return event.preventDefault();\n        },\n        className: formClass,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"editGroupHeaderContainer\",\n        style: {\n          backgroundColor: background\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"groupHeaderOptions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: function onClick() {\n          return history.goBack();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"verticalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 19\n        }\n      }, texts.header)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton center\",\n        onClick: this.handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(\"img\", {\n        src: path(image, [\"path\"]),\n        alt: \"Group Logo\",\n        className: \"editGroupImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"editNameInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }\n      }, texts.name), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: name,\n        id: \"editNameInput\",\n        className: \"form-control\",\n        required: true,\n        name: \"name\",\n        placeholder: texts.name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"nameErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"editGroupInfoContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        style: {\n          borderBottom: \"1px solid rgba(0,0,0,0.5)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-info-circle center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        rows: \"3\",\n        name: \"description\",\n        className: \"editGroupInputField form-control \",\n        placeholder: texts.description,\n        onChange: function onChange(event) {\n          _this2.handleChange(event);\n\n          autosize(document.querySelectorAll(\"textarea\"));\n        },\n        required: true,\n        value: description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"descriptionErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        style: {\n          borderBottom: \"1px solid rgba(0,0,0,0.5)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-camera center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"uploadGroupLogoContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"uploadLogoInput\",\n        className: \"horizontalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, texts.file), window.isNative ? /*#__PURE__*/React.createElement(\"input\", {\n        id: \"uploadLogoInput\",\n        type: \"button\",\n        name: \"photo\",\n        accept: \"image/*\",\n        onClick: this.handleNativeImageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(\"input\", {\n        id: \"uploadLogoInput\",\n        type: \"file\",\n        name: \"photo\",\n        accept: \"image/*\",\n        onChange: this.handleImageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-eye center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        value: visible ? \"visible\" : \"invisible\",\n        onChange: this.handleVisibility,\n        className: \"editGroupInputField center\",\n        name: \"visible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"visible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      }, texts.visible), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"invisible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      }, texts.invisible)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        style: {\n          borderBottom: \"1px solid rgba(0,0,0,0.5)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-map-marker-alt center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: location,\n        className: \"form-control editGroupInputField\",\n        required: true,\n        name: \"location\",\n        placeholder: texts.area,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid-feedback\",\n        id: \"locationErr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        style: {\n          borderBottom: \"1px solid rgba(0,0,0,0.5)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-info-circle center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        value: contactType,\n        onChange: this.handleContactType,\n        className: \"editGroupInputField center\",\n        name: \"contactType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }\n      }, texts.none), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, texts.phone), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }\n      }, texts.email))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: contactType === \"phone\" ? \"fas fa-phone center\" : \"fa fa-envelope center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        required: true,\n        type: \"text\",\n        value: contactInfo,\n        className: \"form-control editGroupInputField\",\n        name: \"contactInfo\",\n        placeholder: texts.contactInfo,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 19\n        }\n      }))))) : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return EditGroupScreen;\n}(React.Component);\n\nexport default withLanguage(EditGroupScreen);\nEditGroupScreen.propTypes = {\n  history: PropTypes.object,\n  language: PropTypes.string,\n  match: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/EditGroupScreen.js"],"names":["React","autosize","axios","PropTypes","path","withLanguage","Texts","LoadingSpinner","Log","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","getGroups","get","params","searchBy","then","response","data","catch","error","getGroup","groupId","name","background","group_id","image","description","location","contact_info","contact_type","getGroupSettings","visible","EditGroupScreen","state","fetchedGroupData","validate","language","props","texts","editGroupScreen","formLength","formEl","checkValidity","i","elem","errorLabel","document","getElementById","nodeName","toLowerCase","validity","valid","valueMissing","textContent","requiredErr","customError","nameErr","handleMessage","event","JSON","parse","action","value","setState","file","submitChanges","contactInfo","contactType","history","bodyFormData","FormData","undefined","append","patch","headers","info","goBack","handleSave","formIsValidated","handleImageChange","target","files","reader","FileReader","onload","e","result","readAsDataURL","handleNativeImageChange","window","ReactNativeWebView","postMessage","stringify","handleVisibility","handleContactType","handleChange","groupNames","nameExists","filter","groupName","toUpperCase","trim","setCustomValidity","handleColorChange","color","hex","addEventListener","groups","group","settings","forEach","item","push","splice","indexOf","removeEventListener","formClass","form","preventDefault","backgroundColor","header","borderBottom","querySelectorAll","isNative","invisible","area","none","phone","email","Component","propTypes","object","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport autosize from \"autosize\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as path from \"lodash.get\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Log from \"./Log\";\r\n\r\nconst dataURLtoFile = (dataurl, filename) => {\r\n  const arr = dataurl.split(\",\");\r\n  const mime = arr[0].match(/:(.*?);/)[1];\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  while (n) {\r\n    n -= 1;\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, { type: mime });\r\n};\r\n\r\nconst getGroups = () => {\r\n  return axios\r\n    .get(\"/api/groups\", { params: { searchBy: \"all\" } })\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\nconst getGroup = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        name: \"\",\r\n        background: \"\",\r\n        group_id: \"\",\r\n        image: { path: \"\" },\r\n        description: \"\",\r\n        location: \"\",\r\n        contact_info: \"\",\r\n        contact_type: \"phone\"\r\n      };\r\n    });\r\n};\r\nconst getGroupSettings = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/settings`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        visible: \"\"\r\n      };\r\n    });\r\n};\r\n\r\nclass EditGroupScreen extends React.Component {\r\n  state = { fetchedGroupData: false };\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    const { groupId } = match.params;\r\n    document.addEventListener(\"message\", this.handleMessage, false);\r\n    const groupNames = [];\r\n    const groups = await getGroups();\r\n    const group = await getGroup(groupId);\r\n    const settings = await getGroupSettings(groupId);\r\n    groups.forEach(item => groupNames.push(item.name));\r\n    groupNames.splice(groupNames.indexOf(group.name), 1);\r\n    group.contactType = group.contact_type;\r\n    delete group.contact_type;\r\n    group.contactInfo = group.contact_info || \"\";\r\n    delete group.contact_info;\r\n    this.setState({\r\n      fetchedGroupData: true,\r\n      ...group,\r\n      ...settings,\r\n      groupNames\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"message\", this.handleMessage, false);\r\n  }\r\n\r\n  validate = () => {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].editGroupScreen;\r\n    const formLength = this.formEl.length;\r\n    if (this.formEl.checkValidity() === false) {\r\n      for (let i = 0; i < formLength; i += 1) {\r\n        const elem = this.formEl[i];\r\n        const errorLabel = document.getElementById(`${elem.name}Err`);\r\n        if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n          if (!elem.validity.valid) {\r\n            if (elem.validity.valueMissing) {\r\n              errorLabel.textContent = texts.requiredErr;\r\n            } else if (elem.validity.customError) {\r\n              errorLabel.textContent = texts.nameErr;\r\n            }\r\n          } else {\r\n            errorLabel.textContent = \"\";\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    for (let i = 0; i < formLength; i += 1) {\r\n      const elem = this.formEl[i];\r\n      const errorLabel = document.getElementById(`${elem.name}Err`);\r\n      if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n        errorLabel.textContent = \"\";\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleMessage = event => {\r\n    const data = JSON.parse(event.data);\r\n    if (data.action === \"fileUpload\") {\r\n      const image = `data:image/png;base64, ${data.value}`;\r\n      this.setState({\r\n        image: { path: image },\r\n        file: dataURLtoFile(image, \"photo.png\")\r\n      });\r\n    }\r\n  };\r\n\r\n  submitChanges = () => {\r\n    const {\r\n      file,\r\n      visible,\r\n      description,\r\n      name,\r\n      background,\r\n      location,\r\n      group_id,\r\n      contactInfo,\r\n      contactType\r\n    } = this.state;\r\n    const { history } = this.props;\r\n    const bodyFormData = new FormData();\r\n    if (file !== undefined) {\r\n      bodyFormData.append(\"photo\", file);\r\n    }\r\n    bodyFormData.append(\"contact_type\", contactType);\r\n    bodyFormData.append(\"contact_info\", contactInfo);\r\n    bodyFormData.append(\"visible\", visible);\r\n    bodyFormData.append(\"name\", name);\r\n    bodyFormData.append(\"description\", description);\r\n    bodyFormData.append(\"background\", background);\r\n    bodyFormData.append(\"location\", location);\r\n    axios\r\n      .patch(`/api/groups/${group_id}`, bodyFormData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(response => {\r\n        Log.info(response);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        history.goBack();\r\n      });\r\n  };\r\n\r\n  handleSave = () => {\r\n    if (this.validate()) {\r\n      this.submitChanges();\r\n    }\r\n    this.setState({ formIsValidated: true });\r\n  };\r\n\r\n  handleImageChange = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = e => {\r\n        this.setState({ image: { path: e.target.result }, file });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  handleNativeImageChange = () => {\r\n    window.ReactNativeWebView.postMessage(\r\n      JSON.stringify({ action: \"fileUpload\" })\r\n    );\r\n  };\r\n\r\n  handleVisibility = event => {\r\n    const visible = event.target.value === \"visible\";\r\n    this.setState({ visible });\r\n  };\r\n\r\n  handleContactType = event => {\r\n    const {\r\n      target: { name, value }\r\n    } = event;\r\n    this.setState({ [name]: value, contactInfo: \"\" });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { language } = this.props;\r\n    const { groupNames } = this.state;\r\n    const { name } = event.target;\r\n    const { value } = event.target;\r\n    if (name === \"name\") {\r\n      const nameExists =\r\n        groupNames.filter(\r\n          groupName => groupName.toUpperCase() === value.toUpperCase().trim()\r\n        ).length > 0;\r\n      if (nameExists) {\r\n        event.target.setCustomValidity(Texts[language].editGroupScreen.nameErr);\r\n      } else {\r\n        event.target.setCustomValidity(\"\");\r\n      }\r\n    }\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleColorChange = color => {\r\n    this.setState({ background: color.hex });\r\n  };\r\n\r\n  render() {\r\n    const { language, history } = this.props;\r\n    const {\r\n      formIsValidated,\r\n      fetchedGroupData,\r\n      background,\r\n      location,\r\n      visible,\r\n      contactInfo,\r\n      contactType,\r\n      name,\r\n      image,\r\n      description\r\n    } = this.state;\r\n    const texts = Texts[language].editGroupScreen;\r\n    const formClass = [];\r\n    if (formIsValidated) {\r\n      formClass.push(\"was-validated\");\r\n    }\r\n    return (\r\n      <div>\r\n        {fetchedGroupData ? (\r\n          <form\r\n            ref={form => {\r\n              this.formEl = form;\r\n            }}\r\n            onSubmit={event => event.preventDefault()}\r\n            className={formClass}\r\n            noValidate\r\n          >\r\n            <div\r\n              id=\"editGroupHeaderContainer\"\r\n              style={{ backgroundColor: background }}\r\n            >\r\n              <div className=\"row no-gutters\" id=\"groupHeaderOptions\">\r\n                <div className=\"col-2-10\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"transparentButton center\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    <i className=\"fas fa-times\" />\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-6-10\">\r\n                  <h2 className=\"verticalCenter\">{texts.header}</h2>\r\n                </div>\r\n                <div className=\"col-2-10\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"transparentButton center\"\r\n                    onClick={this.handleSave}\r\n                  >\r\n                    <i className=\"fas fa-check\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <img\r\n                src={path(image, [\"path\"])}\r\n                alt=\"Group Logo\"\r\n                className=\"editGroupImage\"\r\n              />\r\n              <label htmlFor=\"editNameInput\">{texts.name}</label>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                id=\"editNameInput\"\r\n                className=\"form-control\"\r\n                required\r\n                name=\"name\"\r\n                placeholder={texts.name}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span className=\"invalid-feedback\" id=\"nameErr\" />\r\n            </div>\r\n            <div id=\"editGroupInfoContainer\">\r\n              <div\r\n                className=\"row no-gutters\"\r\n                style={{ borderBottom: \"1px solid rgba(0,0,0,0.5)\" }}\r\n              >\r\n                <div className=\"col-2-10\">\r\n                  <i className=\"fas fa-info-circle center\" />\r\n                </div>\r\n                <div className=\"col-8-10\">\r\n                  <textarea\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    className=\"editGroupInputField form-control \"\r\n                    placeholder={texts.description}\r\n                    onChange={event => {\r\n                      this.handleChange(event);\r\n                      autosize(document.querySelectorAll(\"textarea\"));\r\n                    }}\r\n                    required\r\n                    value={description}\r\n                  />\r\n                  <span className=\"invalid-feedback\" id=\"descriptionErr\" />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"row no-gutters\"\r\n                style={{ borderBottom: \"1px solid rgba(0,0,0,0.5)\" }}\r\n              >\r\n                <div className=\"col-2-10\">\r\n                  <i className=\"fas fa-camera center\" />\r\n                </div>\r\n                <div className=\"col-3-10\">\r\n                  <div id=\"uploadGroupLogoContainer\">\r\n                    <label\r\n                      htmlFor=\"uploadLogoInput\"\r\n                      className=\"horizontalCenter\"\r\n                    >\r\n                      {texts.file}\r\n                    </label>\r\n                    {window.isNative ? (\r\n                      <input\r\n                        id=\"uploadLogoInput\"\r\n                        type=\"button\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\"\r\n                        onClick={this.handleNativeImageChange}\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        id=\"uploadLogoInput\"\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.handleImageChange}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-2-10\">\r\n                  <i className=\"fas fa-eye center\" />\r\n                </div>\r\n                <div className=\"col-3-10\">\r\n                  <select\r\n                    value={visible ? \"visible\" : \"invisible\"}\r\n                    onChange={this.handleVisibility}\r\n                    className=\"editGroupInputField center\"\r\n                    name=\"visible\"\r\n                  >\r\n                    <option value=\"visible\">{texts.visible}</option>\r\n                    <option value=\"invisible\">{texts.invisible}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"row no-gutters\"\r\n                style={{ borderBottom: \"1px solid rgba(0,0,0,0.5)\" }}\r\n              >\r\n                <div className=\"col-2-10\">\r\n                  <i className=\"fas fa-map-marker-alt center\" />\r\n                </div>\r\n                <div className=\"col-8-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={location}\r\n                    className=\"form-control editGroupInputField\"\r\n                    required\r\n                    name=\"location\"\r\n                    placeholder={texts.area}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <span className=\"invalid-feedback\" id=\"locationErr\" />\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"row no-gutters\"\r\n                style={{ borderBottom: \"1px solid rgba(0,0,0,0.5)\" }}\r\n              >\r\n                <div className=\"col-2-10\">\r\n                  <i className=\"fas fa-info-circle center\" />\r\n                </div>\r\n                <div className=\"col-3-10\">\r\n                  <select\r\n                    value={contactType}\r\n                    onChange={this.handleContactType}\r\n                    className=\"editGroupInputField center\"\r\n                    name=\"contactType\"\r\n                  >\r\n                    <option value=\"none\">{texts.none}</option>\r\n                    <option value=\"phone\">{texts.phone}</option>\r\n                    <option value=\"email\">{texts.email}</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-2-10\">\r\n                  <i\r\n                    className={\r\n                      contactType === \"phone\"\r\n                        ? \"fas fa-phone center\"\r\n                        : \"fa fa-envelope center\"\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"col-3-10\">\r\n                  <input\r\n                    required\r\n                    type=\"text\"\r\n                    value={contactInfo}\r\n                    className=\"form-control editGroupInputField\"\r\n                    name=\"contactInfo\"\r\n                    placeholder={texts.contactInfo}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <LoadingSpinner />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withLanguage(EditGroupScreen);\r\n\r\nEditGroupScreen.propTypes = {\r\n  history: PropTypes.object,\r\n  language: PropTypes.string,\r\n  match: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}