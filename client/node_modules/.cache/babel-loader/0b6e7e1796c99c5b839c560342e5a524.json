{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\LandingScreen.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport LandingHeader from \"./LandingHeader\";\nimport LandingNavbar from \"./LandingNavbar\";\nimport GroupList from \"./GroupList\";\nimport Texts from \"../Constants/Texts\";\nimport CardWithLink from \"./CardWithLink\";\nimport withLanguage from \"./LanguageContext\";\nimport Log from \"./Log\";\n\nvar LandingScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(LandingScreen, _React$Component);\n\n  var _super = _createSuper(LandingScreen);\n\n  function LandingScreen() {\n    var _this;\n\n    _classCallCheck(this, LandingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedSuggestions: false,\n      suggestions: [],\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(LandingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/groups/suggestions\").then(function (res) {\n        var suggestions = res.data;\n\n        _this2.setState({\n          fetchedSuggestions: true,\n          suggestions: suggestions\n        });\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedSuggestions: true,\n          error: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var language = this.props.language;\n      var _this$state = this.state,\n          fetchedSuggestions = _this$state.fetchedSuggestions,\n          error = _this$state.error,\n          suggestions = _this$state.suggestions;\n      var texts = Texts[language].landingScreen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"landingScreenContainer fluid background-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(LandingHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(LandingNavbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"landingMainContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardWithLink, {\n        card: {\n          cardHeader: texts.cardHeader,\n          cardInfo: texts.cardInfo,\n          learnMore: true,\n          link: \"/about\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"suggestionsTitle\",\n        className: \"horizontalCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, texts.suggestionsHeader), fetchedSuggestions && !error && /*#__PURE__*/React.createElement(GroupList, {\n        groupIds: suggestions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }\n      }));\n    }\n  }]);\n\n  return LandingScreen;\n}(React.Component);\n\nLandingScreen.propTypes = {\n  language: PropTypes.string\n};\nexport default withLanguage(LandingScreen);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/LandingScreen.js"],"names":["React","axios","PropTypes","LandingHeader","LandingNavbar","GroupList","Texts","CardWithLink","withLanguage","Log","LandingScreen","state","fetchedSuggestions","suggestions","error","get","then","res","data","setState","catch","language","props","texts","landingScreen","cardHeader","cardInfo","learnMore","link","suggestionsHeader","Component","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;IAEMC,a;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,kBAAkB,EAAE,KAAtB;AAA6BC,MAAAA,WAAW,EAAE,EAA1C;AAA8CC,MAAAA,KAAK,EAAE;AAArD,K;;;;;;wCAEY;AAAA;;AAClBb,MAAAA,KAAK,CACFc,GADH,CACO,yBADP,EAEGC,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,YAAMJ,WAAW,GAAGI,GAAG,CAACC,IAAxB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,UAAAA,WAAW,EAAXA;AAA5B,SAAd;AACD,OALH,EAMGO,KANH,CAMS,UAAAN,KAAK,EAAI;AACdL,QAAAA,GAAG,CAACK,KAAJ,CAAUA,KAAV;;AACA,QAAA,MAAI,CAACK,QAAL,CAAc;AAAEP,UAAAA,kBAAkB,EAAE,IAAtB;AAA4BE,UAAAA,KAAK,EAAE;AAAnC,SAAd;AACD,OATH;AAUD;;;6BAEQ;AAAA,UACCO,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAAA,wBAE4C,KAAKV,KAFjD;AAAA,UAECC,kBAFD,eAECA,kBAFD;AAAA,UAEqBE,KAFrB,eAEqBA,KAFrB;AAAA,UAE4BD,WAF5B,eAE4BA,WAF5B;AAGP,UAAMU,KAAK,GAAGjB,KAAK,CAACe,QAAD,CAAL,CAAgBG,aAA9B;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAK,QAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,UAAU,EAAEF,KAAK,CAACE,UADd;AAEJC,UAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFZ;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJC,UAAAA,IAAI,EAAE;AAJF,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,eAaE;AAAI,QAAA,EAAE,EAAC,kBAAP;AAA0B,QAAA,SAAS,EAAC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,KAAK,CAACM,iBADT,CAbF,EAgBGjB,kBAAkB,IAAI,CAACE,KAAvB,iBAAgC,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAED,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBnC,CADF;AAoBD;;;;EAxCyBb,KAAK,CAAC8B,S;;AA2ClCpB,aAAa,CAACqB,SAAd,GAA0B;AACxBV,EAAAA,QAAQ,EAAEnB,SAAS,CAAC8B;AADI,CAA1B;AAIA,eAAexB,YAAY,CAACE,aAAD,CAA3B","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport LandingHeader from \"./LandingHeader\";\r\nimport LandingNavbar from \"./LandingNavbar\";\r\nimport GroupList from \"./GroupList\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport CardWithLink from \"./CardWithLink\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Log from \"./Log\";\r\n\r\nclass LandingScreen extends React.Component {\r\n  state = { fetchedSuggestions: false, suggestions: [], error: false };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/groups/suggestions\")\r\n      .then(res => {\r\n        const suggestions = res.data;\r\n        this.setState({ fetchedSuggestions: true, suggestions });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({ fetchedSuggestions: true, error: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    const { fetchedSuggestions, error, suggestions } = this.state;\r\n    const texts = Texts[language].landingScreen;\r\n    return (\r\n      <div className=\"landingScreenContainer fluid background-primary\">\r\n        <LandingHeader />\r\n        <LandingNavbar />\r\n        <div id=\"landingMainContainer\">\r\n          <CardWithLink\r\n            card={{\r\n              cardHeader: texts.cardHeader,\r\n              cardInfo: texts.cardInfo,\r\n              learnMore: true,\r\n              link: \"/about\"\r\n            }}\r\n          />\r\n        </div>\r\n        <h1 id=\"suggestionsTitle\" className=\"horizontalCenter\">\r\n          {texts.suggestionsHeader}\r\n        </h1>\r\n        {fetchedSuggestions && !error && <GroupList groupIds={suggestions} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLandingScreen.propTypes = {\r\n  language: PropTypes.string\r\n};\r\n\r\nexport default withLanguage(LandingScreen);\r\n"]},"metadata":{},"sourceType":"module"}