{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\GroupListItem.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\nimport axios from \"axios\";\nimport withLanguage from \"./LanguageContext\";\nimport Texts from \"../Constants/Texts\";\nimport Avatar from \"./Avatar\";\nimport Log from \"./Log\";\n\nvar getGroup = function getGroup(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      image: {\n        path: \"\"\n      },\n      group_id: \"\",\n      name: \"\"\n    };\n  });\n};\n\nvar getGroupMembers = function getGroupMembers(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/members\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getGroupSettings = function getGroupSettings(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/settings\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      open: \"\"\n    };\n  });\n};\n\nvar GroupListItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupListItem, _React$Component);\n\n  var _super = _createSuper(GroupListItem);\n\n  function GroupListItem() {\n    var _this;\n\n    _classCallCheck(this, GroupListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedGroupData: false,\n      group: {}\n    };\n\n    _this.handleNavigation = function () {\n      var history = _this.props.history;\n      var group = _this.state.group;\n      history.push(\"/groups/\".concat(group.group_id, \"/activities\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(GroupListItem, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var groupId, group, members;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                groupId = this.props.groupId;\n                _context.next = 3;\n                return getGroup(groupId);\n\n              case 3:\n                group = _context.sent;\n                _context.next = 6;\n                return getGroupMembers(groupId);\n\n              case 6:\n                members = _context.sent;\n                _context.next = 9;\n                return getGroupSettings(groupId);\n\n              case 9:\n                group.settings = _context.sent;\n                group.members = members.filter(function (member) {\n                  return member.user_accepted && member.group_accepted;\n                });\n                this.setState({\n                  fetchedGroupData: true,\n                  group: group\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var language = this.props.language;\n      var texts = Texts[language].groupListItem;\n      var _this$state = this.state,\n          group = _this$state.group,\n          fetchedGroupData = _this$state.fetchedGroupData;\n      return fetchedGroupData ? /*#__PURE__*/React.createElement(\"div\", {\n        role: \"button\",\n        tabIndex: -42,\n        className: \"row no-gutters\",\n        id: \"suggestionContainer\",\n        onClick: this.handleNavigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        thumbnail: group.image.thumbnail_path,\n        className: \"center\",\n        route: \"/groups/\".concat(group.group_id, \"/activities\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"suggestionInfoContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, group.name), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"\".concat(texts.members, \": \").concat(group.members.length)), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, group.settings.open ? texts.open : texts.closed)))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"suggestionContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        avatar: true,\n        active: true,\n        paragraph: {\n          rows: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return GroupListItem;\n}(React.Component);\n\nGroupListItem.propTypes = {\n  groupId: PropTypes.string,\n  language: PropTypes.string,\n  history: PropTypes.object\n};\nexport default withRouter(withLanguage(GroupListItem));","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/GroupListItem.js"],"names":["React","PropTypes","withRouter","Skeleton","axios","withLanguage","Texts","Avatar","Log","getGroup","groupId","get","then","response","data","catch","error","image","path","group_id","name","getGroupMembers","getGroupSettings","open","GroupListItem","state","fetchedGroupData","group","handleNavigation","history","props","push","members","settings","filter","member","user_accepted","group_accepted","setState","language","texts","groupListItem","thumbnail_path","length","closed","rows","Component","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\nimport axios from \"axios\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport Avatar from \"./Avatar\";\r\nimport Log from \"./Log\";\r\n\r\nconst getGroup = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        image: { path: \"\" },\r\n        group_id: \"\",\r\n        name: \"\"\r\n      };\r\n    });\r\n};\r\n\r\nconst getGroupMembers = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/members`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\nconst getGroupSettings = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/settings`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        open: \"\"\r\n      };\r\n    });\r\n};\r\nclass GroupListItem extends React.Component {\r\n  state = { fetchedGroupData: false, group: {} };\r\n\r\n  async componentDidMount() {\r\n    const { groupId } = this.props;\r\n    const group = await getGroup(groupId);\r\n    const members = await getGroupMembers(groupId);\r\n    // group.kids = await getGroupKids(groupId);\r\n    group.settings = await getGroupSettings(groupId);\r\n    group.members = members.filter(\r\n      member => member.user_accepted && member.group_accepted\r\n    );\r\n    this.setState({ fetchedGroupData: true, group });\r\n  }\r\n\r\n  handleNavigation = () => {\r\n    const { history } = this.props;\r\n    const { group } = this.state;\r\n    history.push(`/groups/${group.group_id}/activities`);\r\n  };\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].groupListItem;\r\n    const { group, fetchedGroupData } = this.state;\r\n    return fetchedGroupData ? (\r\n      <div\r\n        role=\"button\"\r\n        tabIndex={-42}\r\n        className=\"row no-gutters\"\r\n        id=\"suggestionContainer\"\r\n        onClick={this.handleNavigation}\r\n      >\r\n        <div className=\"col-2-10\">\r\n          <Avatar\r\n            thumbnail={group.image.thumbnail_path}\r\n            className=\"center\"\r\n            route={`/groups/${group.group_id}/activities`}\r\n          />\r\n        </div>\r\n        <div className=\"col-8-10\">\r\n          <div id=\"suggestionInfoContainer\">\r\n            <h1>{group.name}</h1>\r\n            <h2>{`${texts.members}: ${group.members.length}`}</h2>\r\n            <h3>{group.settings.open ? texts.open : texts.closed}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"row no-gutters\" id=\"suggestionContainer\">\r\n        <Skeleton avatar active paragraph={{ rows: 2 }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGroupListItem.propTypes = {\r\n  groupId: PropTypes.string,\r\n  language: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(withLanguage(GroupListItem));\r\n"]},"metadata":{},"sourceType":"module"}