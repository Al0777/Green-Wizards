{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\MyFamiliesShareScreen.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport MyFamiliesShareHeader from \"./MyFamiliesShareHeader\";\nimport withLanguage from \"./LanguageContext\";\nimport GroupList from \"./GroupList\";\nimport TimeslotsList from \"./TimeslotsList\";\nimport Texts from \"../Constants/Texts\";\nimport Log from \"./Log\";\nimport Images from \"../Constants/Images\";\n\nvar getMyGroups = function getMyGroups(userId) {\n  return axios.get(\"/api/users/\".concat(userId, \"/groups\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getMyTimeslots = function getMyTimeslots(userId) {\n  return axios.get(\"/api/users/\".concat(userId, \"/events\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getMyUnreadNotifications = function getMyUnreadNotifications(userId) {\n  return axios.get(\"/api/users/\".concat(userId, \"/notifications/unread\")).then(function (response) {\n    return response.data.unreadNotifications;\n  }).catch(function (error) {\n    Log.error(error);\n    return 0;\n  });\n};\n\nvar updateDeviceToken = function updateDeviceToken(userId, deviceToken) {\n  return axios.post(\"/api/users/\".concat(userId, \"/deviceToken\"), {\n    deviceToken: deviceToken\n  }).then().catch(function (error) {\n    Log.error(error);\n  });\n};\n\nvar MyFamiliesShareScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyFamiliesShareScreen, _React$Component);\n\n  var _super = _createSuper(MyFamiliesShareScreen);\n\n  function MyFamiliesShareScreen() {\n    var _this;\n\n    _classCallCheck(this, MyFamiliesShareScreen);\n\n    _this = _super.call(this);\n\n    _this.renderGroupSection = function () {\n      var language = _this.props.language;\n      var myGroups = _this.state.myGroups;\n      var texts = Texts[language].myFamiliesShareScreen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainerHeader\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, texts.myGroups), myGroups.length > 0 ? /*#__PURE__*/React.createElement(GroupList, {\n        groupIds: myGroups,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainerPrompt\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, texts.myGroupsPrompt));\n    };\n\n    _this.renderTimeslotsSection = function () {\n      var language = _this.props.language;\n      var _this$state = _this.state,\n          myTimeslots = _this$state.myTimeslots,\n          dates = _this$state.dates;\n      var texts = Texts[language].myFamiliesShareScreen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainerHeader\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, texts.myActivities), myTimeslots.length > 0 ? /*#__PURE__*/React.createElement(TimeslotsList, {\n        timeslots: myTimeslots,\n        dates: dates,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"myGroupsContainerPrompt\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, texts.myActivitiesPrompt));\n    };\n\n    _this.renderPromptAction = function () {\n      var _this$props = _this.props,\n          language = _this$props.language,\n          pushHistory = _this$props.history.push;\n      var texts = Texts[language].myFamiliesShareScreen;\n      var myGroups = _this.state.myGroups;\n\n      if (myGroups.length === 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"myPromptSection\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"myPromptActionsContainer\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"myPromptAction\",\n          onClick: function onClick() {\n            return pushHistory(\"/groups/search\");\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }\n        }, texts.joinPrompt), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"myPromptAction\",\n          onClick: function onClick() {\n            return pushHistory(\"/groups/create\");\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }\n        }, texts.createPrompt)), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"myPromptImage\",\n          src: Images.promptImage,\n          alt: \"confetti icon\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      fetchedUserInfo: false,\n      myTimeslots: [],\n      myGroups: [],\n      pendingInvites: 0\n    };\n    return _this;\n  }\n\n  _createClass(MyFamiliesShareScreen, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var deviceToken, userId, groups, myGroups, pendingInvites, unreadNotifications, myTimeslots, dates, uniqueDates, temp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deviceToken = localStorage.getItem(\"deviceToken\");\n                userId = JSON.parse(localStorage.getItem(\"user\")).id;\n\n                if (!(deviceToken !== undefined && deviceToken !== \"undefined\")) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return updateDeviceToken(userId, deviceToken);\n\n              case 5:\n                _context.next = 7;\n                return getMyGroups(userId);\n\n              case 7:\n                groups = _context.sent;\n                myGroups = groups.filter(function (group) {\n                  return group.user_accepted && group.group_accepted;\n                }).map(function (group) {\n                  return group.group_id;\n                });\n                pendingInvites = groups.filter(function (group) {\n                  return group.group_accepted && !group.user_accepted;\n                }).length;\n                _context.next = 12;\n                return getMyUnreadNotifications(userId);\n\n              case 12:\n                unreadNotifications = _context.sent;\n                _context.next = 15;\n                return getMyTimeslots(userId);\n\n              case 15:\n                myTimeslots = _context.sent;\n                myTimeslots = myTimeslots.filter(function (t) {\n                  return new Date(t.start.dateTime).getTime() - new Date().getTime() > 0;\n                });\n                dates = myTimeslots.map(function (timeslot) {\n                  return timeslot.start.dateTime;\n                });\n                dates = dates.sort(function (a, b) {\n                  return new Date(a) - new Date(b);\n                });\n                uniqueDates = [];\n                temp = [];\n                dates.forEach(function (date) {\n                  var t = moment(date).format(\"DD-MM-YYYY\");\n\n                  if (!temp.includes(t)) {\n                    temp.push(t);\n                    uniqueDates.push(date);\n                  }\n                });\n                this.setState({\n                  fetchedUserInfo: true,\n                  unreadNotifications: unreadNotifications,\n                  dates: uniqueDates,\n                  myGroups: myGroups,\n                  myTimeslots: myTimeslots,\n                  pendingInvites: pendingInvites\n                });\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          pendingInvites = _this$state2.pendingInvites,\n          unreadNotifications = _this$state2.unreadNotifications,\n          fetchedUserInfo = _this$state2.fetchedUserInfo;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"drawerContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MyFamiliesShareHeader, {\n        pendingInvites: pendingInvites,\n        pendingNotifications: unreadNotifications,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }), fetchedUserInfo && /*#__PURE__*/React.createElement(\"div\", {\n        id: \"myFamiliesShareMainContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, this.renderGroupSection(), this.renderTimeslotsSection(), this.renderPromptAction())));\n    }\n  }]);\n\n  return MyFamiliesShareScreen;\n}(React.Component);\n\nMyFamiliesShareScreen.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object\n};\nexport default withLanguage(withRouter(MyFamiliesShareScreen));","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/MyFamiliesShareScreen.js"],"names":["React","axios","moment","PropTypes","withRouter","MyFamiliesShareHeader","withLanguage","GroupList","TimeslotsList","Texts","Log","Images","getMyGroups","userId","get","then","response","data","catch","error","getMyTimeslots","getMyUnreadNotifications","unreadNotifications","updateDeviceToken","deviceToken","post","MyFamiliesShareScreen","renderGroupSection","language","props","myGroups","state","texts","myFamiliesShareScreen","length","myGroupsPrompt","renderTimeslotsSection","myTimeslots","dates","myActivities","myActivitiesPrompt","renderPromptAction","pushHistory","history","push","joinPrompt","createPrompt","promptImage","fetchedUserInfo","pendingInvites","localStorage","getItem","JSON","parse","id","undefined","groups","filter","group","user_accepted","group_accepted","map","group_id","t","Date","start","dateTime","getTime","timeslot","sort","a","b","uniqueDates","temp","forEach","date","format","includes","setState","Component","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MyFamiliesShareHeader from \"./MyFamiliesShareHeader\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport GroupList from \"./GroupList\";\r\nimport TimeslotsList from \"./TimeslotsList\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport Log from \"./Log\";\r\nimport Images from \"../Constants/Images\";\r\n\r\nconst getMyGroups = userId => {\r\n  return axios\r\n    .get(`/api/users/${userId}/groups`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\n\r\nconst getMyTimeslots = userId => {\r\n  return axios\r\n    .get(`/api/users/${userId}/events`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\nconst getMyUnreadNotifications = userId => {\r\n  return axios\r\n    .get(`/api/users/${userId}/notifications/unread`)\r\n    .then(response => {\r\n      return response.data.unreadNotifications;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return 0;\r\n    });\r\n};\r\n\r\nconst updateDeviceToken = (userId, deviceToken) => {\r\n  return axios\r\n    .post(`/api/users/${userId}/deviceToken`, {\r\n      deviceToken\r\n    })\r\n    .then()\r\n    .catch(error => {\r\n      Log.error(error);\r\n    });\r\n};\r\n\r\nclass MyFamiliesShareScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fetchedUserInfo: false,\r\n      myTimeslots: [],\r\n      myGroups: [],\r\n      pendingInvites: 0\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const deviceToken = localStorage.getItem(\"deviceToken\");\r\n    const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n    if (deviceToken !== undefined && deviceToken !== \"undefined\") {\r\n      await updateDeviceToken(userId, deviceToken);\r\n    }\r\n    const groups = await getMyGroups(userId);\r\n    const myGroups = groups\r\n      .filter(group => group.user_accepted && group.group_accepted)\r\n      .map(group => group.group_id);\r\n    const pendingInvites = groups.filter(\r\n      group => group.group_accepted && !group.user_accepted\r\n    ).length;\r\n    const unreadNotifications = await getMyUnreadNotifications(userId);\r\n    let myTimeslots = await getMyTimeslots(userId);\r\n    myTimeslots = myTimeslots.filter(\r\n      t => new Date(t.start.dateTime).getTime() - new Date().getTime() > 0\r\n    );\r\n    let dates = myTimeslots.map(timeslot => timeslot.start.dateTime);\r\n    dates = dates.sort((a, b) => {\r\n      return new Date(a) - new Date(b);\r\n    });\r\n    const uniqueDates = [];\r\n    const temp = [];\r\n    dates.forEach(date => {\r\n      const t = moment(date).format(\"DD-MM-YYYY\");\r\n      if (!temp.includes(t)) {\r\n        temp.push(t);\r\n        uniqueDates.push(date);\r\n      }\r\n    });\r\n    this.setState({\r\n      fetchedUserInfo: true,\r\n      unreadNotifications,\r\n      dates: uniqueDates,\r\n      myGroups,\r\n      myTimeslots,\r\n      pendingInvites\r\n    });\r\n  }\r\n\r\n  renderGroupSection = () => {\r\n    const { language } = this.props;\r\n    const { myGroups } = this.state;\r\n    const texts = Texts[language].myFamiliesShareScreen;\r\n    return (\r\n      <div className=\"myGroupsContainer\">\r\n        <div className=\"myGroupsContainerHeader\">{texts.myGroups}</div>\r\n        {myGroups.length > 0 ? (\r\n          <GroupList groupIds={myGroups} />\r\n        ) : (\r\n          <div className=\"myGroupsContainerPrompt\">{texts.myGroupsPrompt}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTimeslotsSection = () => {\r\n    const { language } = this.props;\r\n    const { myTimeslots, dates } = this.state;\r\n    const texts = Texts[language].myFamiliesShareScreen;\r\n    return (\r\n      <div className=\"myGroupsContainer\">\r\n        <div className=\"myGroupsContainerHeader\">{texts.myActivities}</div>\r\n        {myTimeslots.length > 0 ? (\r\n          <TimeslotsList timeslots={myTimeslots} dates={dates} />\r\n        ) : (\r\n          <div className=\"myGroupsContainerPrompt\">\r\n            {texts.myActivitiesPrompt}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPromptAction = () => {\r\n    const {\r\n      language,\r\n      history: { push: pushHistory }\r\n    } = this.props;\r\n    const texts = Texts[language].myFamiliesShareScreen;\r\n    const { myGroups } = this.state;\r\n    if (myGroups.length === 0) {\r\n      return (\r\n        <div className=\"myPromptSection\">\r\n          <div className=\"myPromptActionsContainer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"myPromptAction\"\r\n              onClick={() => pushHistory(\"/groups/search\")}\r\n            >\r\n              {texts.joinPrompt}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"myPromptAction\"\r\n              onClick={() => pushHistory(\"/groups/create\")}\r\n            >\r\n              {texts.createPrompt}\r\n            </button>\r\n          </div>\r\n          <img\r\n            className=\"myPromptImage\"\r\n            src={Images.promptImage}\r\n            alt=\"confetti icon\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    const { pendingInvites, unreadNotifications, fetchedUserInfo } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"drawerContainer\">\r\n          <MyFamiliesShareHeader\r\n            pendingInvites={pendingInvites}\r\n            pendingNotifications={unreadNotifications}\r\n          />\r\n          {fetchedUserInfo && (\r\n            <div id=\"myFamiliesShareMainContainer\">\r\n              {this.renderGroupSection()}\r\n              {this.renderTimeslotsSection()}\r\n              {this.renderPromptAction()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMyFamiliesShareScreen.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withLanguage(withRouter(MyFamiliesShareScreen));\r\n"]},"metadata":{},"sourceType":"module"}