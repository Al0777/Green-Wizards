{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\GroupManagementScreen.js\";\nimport React from \"react\";\nimport { Skeleton } from \"antd\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport BackNavigation from \"./BackNavigation\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nvar theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        fontFamily: \"Roboto\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        texAlign: \"center\",\n        fontSize: \"1.6rem!important\",\n        border: \"1px solid rgba(0,0,0,0.1)\"\n      }\n    }\n  }\n});\n\nvar GroupManagementScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupManagementScreen, _React$Component);\n\n  var _super = _createSuper(GroupManagementScreen);\n\n  function GroupManagementScreen() {\n    var _this;\n\n    _classCallCheck(this, GroupManagementScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedData: false\n    };\n\n    _this.handleBackNav = function () {\n      var history = _this.props.history;\n      history.goBack();\n    };\n\n    _this.renderMetrics = function () {\n      var language = _this.props.language;\n\n      var _JSON$parse = JSON.parse(JSON.stringify(_this.state)),\n          metrics = _JSON$parse.metrics;\n\n      delete metrics.contributions;\n      var properties = Object.keys(metrics);\n      var values = Object.values(metrics);\n      var texts = Texts[language].groupManagementScreen;\n      return /*#__PURE__*/React.createElement(Table, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, texts.metricsColumn), /*#__PURE__*/React.createElement(TableCell, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, texts.valuesColumn))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, properties.map(function (property, index) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          key: property,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        }, texts[property]), /*#__PURE__*/React.createElement(TableCell, {\n          align: \"right\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, values[index]));\n      })));\n    };\n\n    _this.renderChart = function () {\n      var contributions = _this.state.metrics.contributions;\n      var chartData = contributions.map(function (c) {\n        return {\n          volunteer: \"\".concat(c.given_name, \" \").concat(c.family_name),\n          value: c.contribution\n        };\n      });\n      var min = 0;\n      var max = Math.max(contributions.map(function (c) {\n        return c.contribution;\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartsContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        width: \"80%\",\n        height: 300,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BarChart, {\n        data: chartData,\n        maxBarSize: 50,\n        className: \"usersContributionChart\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"volunteer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        domain: [min, max],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Bar, {\n        dataKey: \"value\",\n        fill: \"#00838F\",\n        layout: \"horizontal\",\n        name: \"name\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(GroupManagementScreen, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var match, groupId, metricsResponse, metrics;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                match = this.props.match;\n                groupId = match.params.groupId;\n                _context.next = 4;\n                return axios.get(\"/api/groups/\".concat(groupId, \"/metrics\"));\n\n              case 4:\n                metricsResponse = _context.sent;\n                metrics = metricsResponse.data;\n                this.setState({\n                  fetchedData: true,\n                  metrics: metrics\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var language = this.props.language;\n      var texts = Texts[language].groupManagementScreen;\n      var fetchedData = this.state.fetchedData;\n      return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BackNavigation, {\n        title: texts.backNavTitle,\n        onClick: this.handleBackNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"interface-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, fetchedData ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, texts.metricsHeader), this.renderMetrics(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, texts.chartHeader), this.renderChart()) : /*#__PURE__*/React.createElement(Skeleton, {\n        active: true,\n        paragraph: {\n          rows: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return GroupManagementScreen;\n}(React.Component);\n\nGroupManagementScreen.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object,\n  match: PropTypes.object\n};\nexport default withLanguage(GroupManagementScreen);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/GroupManagementScreen.js"],"names":["React","Skeleton","axios","PropTypes","createMuiTheme","MuiThemeProvider","Table","TableBody","TableCell","TableHead","TableRow","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","BackNavigation","Texts","withLanguage","theme","typography","useNextVariants","overrides","MuiTable","root","border","fontFamily","MuiTableCell","texAlign","fontSize","GroupManagementScreen","state","fetchedData","handleBackNav","history","props","goBack","renderMetrics","language","JSON","parse","stringify","metrics","contributions","properties","Object","keys","values","texts","groupManagementScreen","metricsColumn","valuesColumn","map","property","index","renderChart","chartData","c","volunteer","given_name","family_name","value","contribution","min","max","Math","match","groupId","params","get","metricsResponse","data","setState","backNavTitle","metricsHeader","chartHeader","rows","Component","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Skeleton } from \"antd\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport BackNavigation from \"./BackNavigation\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        border: \"1px solid rgba(0,0,0,0.1)\",\r\n        fontFamily: \"Roboto\"\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        texAlign: \"center\",\r\n        fontSize: \"1.6rem!important\",\r\n        border: \"1px solid rgba(0,0,0,0.1)\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass GroupManagementScreen extends React.Component {\r\n  state = {\r\n    fetchedData: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    const { groupId } = match.params;\r\n    const metricsResponse = await axios.get(`/api/groups/${groupId}/metrics`);\r\n    const metrics = metricsResponse.data;\r\n    this.setState({\r\n      fetchedData: true,\r\n      metrics\r\n    });\r\n  }\r\n\r\n  handleBackNav = () => {\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n\r\n  renderMetrics = () => {\r\n    const { language } = this.props;\r\n    const { metrics } = JSON.parse(JSON.stringify(this.state));\r\n    delete metrics.contributions;\r\n    const properties = Object.keys(metrics);\r\n    const values = Object.values(metrics);\r\n    const texts = Texts[language].groupManagementScreen;\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{texts.metricsColumn}</TableCell>\r\n            <TableCell>{texts.valuesColumn}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {properties.map((property, index) => (\r\n            <TableRow key={property}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {texts[property]}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{values[index]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  renderChart = () => {\r\n    const {\r\n      metrics: { contributions }\r\n    } = this.state;\r\n    const chartData = contributions.map(c => ({\r\n      volunteer: `${c.given_name} ${c.family_name}`,\r\n      value: c.contribution\r\n    }));\r\n    const min = 0;\r\n    const max = Math.max(contributions.map(c => c.contribution));\r\n    return (\r\n      <div className=\"chartsContainer\">\r\n        <ResponsiveContainer width=\"80%\" height={300}>\r\n          <BarChart\r\n            data={chartData}\r\n            maxBarSize={50}\r\n            className=\"usersContributionChart\"\r\n          >\r\n            <XAxis dataKey=\"volunteer\" />\r\n            <YAxis domain={[min, max]} />\r\n            <Tooltip />\r\n            <Bar\r\n              dataKey=\"value\"\r\n              fill=\"#00838F\"\r\n              layout=\"horizontal\"\r\n              name=\"name\"\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].groupManagementScreen;\r\n    const { fetchedData } = this.state;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <BackNavigation\r\n          title={texts.backNavTitle}\r\n          onClick={this.handleBackNav}\r\n        />\r\n        <div className=\"interface-container\">\r\n          {fetchedData ? (\r\n            <React.Fragment>\r\n              <div className=\"analytics-header\">{texts.metricsHeader}</div>\r\n              {this.renderMetrics()}\r\n              <div className=\"analytics-header\">{texts.chartHeader}</div>\r\n              {this.renderChart()}\r\n            </React.Fragment>\r\n          ) : (\r\n            <Skeleton active paragraph={{ rows: 15 }} />\r\n          )}\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nGroupManagementScreen.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object,\r\n  match: PropTypes.object\r\n};\r\n\r\nexport default withLanguage(GroupManagementScreen);\r\n"]},"metadata":{},"sourceType":"module"}