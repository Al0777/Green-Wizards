{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\CommunityManagementScreen.js\";\nimport React from \"react\";\nimport { Skeleton } from \"antd\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport moment from \"moment\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from \"recharts\";\nimport Papa from \"papaparse\";\nimport BackNavigation from \"./BackNavigation\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport Log from \"./Log\";\nvar theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(0,0,0,0.1)\",\n        fontFamily: \"Roboto\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        texAlign: \"center\",\n        fontSize: \"1.6rem!important\",\n        border: \"1px solid rgba(0,0,0,0.1)\"\n      }\n    }\n  }\n});\n\nvar CommunityInterface = /*#__PURE__*/function (_React$Component) {\n  _inherits(CommunityInterface, _React$Component);\n\n  var _super = _createSuper(CommunityInterface);\n\n  function CommunityInterface() {\n    var _this;\n\n    _classCallCheck(this, CommunityInterface);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedData: false\n    };\n\n    _this.parseAnalytics = function (data) {\n      var parsedData = Papa.parse(data, {\n        delimiter: \" \"\n      });\n      parsedData.data.shift();\n      parsedData.data.pop();\n      return parsedData.data;\n    };\n\n    _this.handleBackNav = function () {\n      var history = _this.props.history;\n      history.goBack();\n    };\n\n    _this.renderMetrics = function () {\n      var language = _this.props.language;\n      var analytics = _this.state.analytics;\n      var metrics = Object.keys(analytics);\n      var values = Object.values(analytics);\n      var texts = Texts[language].communityInterface;\n      return /*#__PURE__*/React.createElement(Table, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, texts.metricsColumn), /*#__PURE__*/React.createElement(TableCell, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, texts.valuesColumn))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, metrics.map(function (metric, index) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          key: metric,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, texts[metric]), /*#__PURE__*/React.createElement(TableCell, {\n          align: \"right\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, values[index]));\n      })));\n    };\n\n    _this.handleConfiguration = function (configuration) {\n      var configurations = _this.state.configurations;\n\n      var updatedConfigurations = _objectSpread({}, configurations);\n\n      updatedConfigurations[configuration] = !configurations[configuration];\n      axios.patch(\"/api/community\", _objectSpread({}, updatedConfigurations)).then(function (response) {\n        Log.info(response);\n\n        _this.setState({\n          configurations: updatedConfigurations\n        });\n      }).catch(function (err) {\n        Log.error(err);\n      });\n    };\n\n    _this.renderConfigurations = function () {\n      var language = _this.props.language;\n      var conf = _this.state.configurations;\n      var configurations = Object.keys(conf);\n      var values = Object.values(conf);\n      var texts = Texts[language].communityInterface;\n      return configurations.map(function (configuration, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row no-gutters\",\n          key: configuration,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"analytics-info\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }\n        }, texts[configuration]), /*#__PURE__*/React.createElement(Switch, {\n          checked: values[index],\n          onChange: function onChange() {\n            return _this.handleConfiguration(configuration);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }\n        }));\n      });\n    };\n\n    _this.handleSelectChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.renderCharts = function () {\n      var _this$state = _this.state,\n          analyticsData = _this$state.analyticsData,\n          chartMonth = _this$state.chartMonth,\n          chartNumber = _this$state.chartNumber;\n      var language = _this.props.language;\n      var texts = Texts[language].communityInterface;\n\n      var charts = _toConsumableArray(Array(analyticsData[0].length - 1).keys());\n\n      var chartsData = analyticsData.map(function (value) {\n        return {\n          date: value[0],\n          value: parseInt(value[parseInt(chartNumber, 10) + 1], 10)\n        };\n      });\n      var monthlyData = chartsData.filter(function (value) {\n        return moment(value.date).format(\"MMMM-YYYY\") === chartMonth;\n      });\n      var min = 0;\n      var max = Math.max(chartsData.map(function (t) {\n        return t.value;\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartsContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectChartsContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"chartsSelect\",\n        value: chartNumber,\n        onChange: _this.handleSelectChange,\n        name: \"chartNumber\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, charts.map(function (d) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: d,\n          value: d,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }\n        }, texts.charts[d]);\n      })), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"chartsSelect\",\n        value: chartMonth,\n        onChange: _this.handleSelectChange,\n        name: \"chartMonth\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, _toConsumableArray(new Set(chartsData.map(function (data) {\n        return moment(data.date).format(\"MMMM-YYYY\");\n      }))).map(function (d) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: d,\n          value: d,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }\n        }, d);\n      }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        width: \"80%\",\n        height: 300,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        data: monthlyData,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#00838F\",\n        name: texts.charts[chartNumber],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"date\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        domain: [min, max],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        verticalAlign: \"bottom\",\n        height: 36,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(CommunityInterface, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var metricsResponse, dataResponse, parsedData, _metricsResponse$data, analytics, configurations;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/api/community\");\n\n              case 2:\n                metricsResponse = _context.sent;\n                _context.next = 5;\n                return axios.get(\"/api/community/data\");\n\n              case 5:\n                dataResponse = _context.sent;\n                parsedData = this.parseAnalytics(dataResponse.data);\n                _metricsResponse$data = metricsResponse.data, analytics = _metricsResponse$data.analytics, configurations = _metricsResponse$data.configurations;\n                this.setState({\n                  analytics: analytics,\n                  configurations: configurations,\n                  fetchedData: true,\n                  analyticsData: parsedData,\n                  chartMonth: moment().format(\"MMMM-YYYY\"),\n                  chartNumber: 0\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var language = this.props.language;\n      var texts = Texts[language].communityInterface;\n      var fetchedData = this.state.fetchedData;\n      return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BackNavigation, {\n        title: texts.backNavTitle,\n        onClick: this.handleBackNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"interface-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, fetchedData ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, texts.analyticsHeader), this.renderMetrics(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }, texts.configurationsHeader), this.renderConfigurations(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, texts.chartsHeader), this.renderCharts()) : /*#__PURE__*/React.createElement(Skeleton, {\n        active: true,\n        paragraph: {\n          rows: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return CommunityInterface;\n}(React.Component);\n\nCommunityInterface.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object\n};\nexport default withLanguage(CommunityInterface);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/CommunityManagementScreen.js"],"names":["React","Skeleton","axios","PropTypes","Switch","createMuiTheme","MuiThemeProvider","Table","TableBody","TableCell","TableHead","TableRow","moment","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","Legend","Papa","BackNavigation","Texts","withLanguage","Log","theme","typography","useNextVariants","overrides","MuiTable","root","border","fontFamily","MuiTableCell","texAlign","fontSize","CommunityInterface","state","fetchedData","parseAnalytics","data","parsedData","parse","delimiter","shift","pop","handleBackNav","history","props","goBack","renderMetrics","language","analytics","metrics","Object","keys","values","texts","communityInterface","metricsColumn","valuesColumn","map","metric","index","handleConfiguration","configuration","configurations","updatedConfigurations","patch","then","response","info","setState","catch","err","error","renderConfigurations","conf","handleSelectChange","event","name","target","value","renderCharts","analyticsData","chartMonth","chartNumber","charts","Array","length","chartsData","date","parseInt","monthlyData","filter","format","min","max","Math","t","d","Set","get","metricsResponse","dataResponse","backNavTitle","analyticsHeader","configurationsHeader","chartsHeader","rows","Component","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Skeleton } from \"antd\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport moment from \"moment\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend\r\n} from \"recharts\";\r\nimport Papa from \"papaparse\";\r\nimport BackNavigation from \"./BackNavigation\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Log from \"./Log\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiTable: {\r\n      root: {\r\n        border: \"1px solid rgba(0,0,0,0.1)\",\r\n        fontFamily: \"Roboto\"\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        texAlign: \"center\",\r\n        fontSize: \"1.6rem!important\",\r\n        border: \"1px solid rgba(0,0,0,0.1)\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass CommunityInterface extends React.Component {\r\n  state = {\r\n    fetchedData: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const metricsResponse = await axios.get(\"/api/community\");\r\n    const dataResponse = await axios.get(\"/api/community/data\");\r\n    const parsedData = this.parseAnalytics(dataResponse.data);\r\n    const { analytics, configurations } = metricsResponse.data;\r\n    this.setState({\r\n      analytics,\r\n      configurations,\r\n      fetchedData: true,\r\n      analyticsData: parsedData,\r\n      chartMonth: moment().format(\"MMMM-YYYY\"),\r\n      chartNumber: 0\r\n    });\r\n  }\r\n\r\n  parseAnalytics = data => {\r\n    const parsedData = Papa.parse(data, { delimiter: \" \" });\r\n    parsedData.data.shift();\r\n    parsedData.data.pop();\r\n    return parsedData.data;\r\n  };\r\n\r\n  handleBackNav = () => {\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n\r\n  renderMetrics = () => {\r\n    const { language } = this.props;\r\n    const { analytics } = this.state;\r\n    const metrics = Object.keys(analytics);\r\n    const values = Object.values(analytics);\r\n    const texts = Texts[language].communityInterface;\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{texts.metricsColumn}</TableCell>\r\n            <TableCell>{texts.valuesColumn}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {metrics.map((metric, index) => (\r\n            <TableRow key={metric}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {texts[metric]}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{values[index]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  handleConfiguration = configuration => {\r\n    const { configurations } = this.state;\r\n    const updatedConfigurations = { ...configurations };\r\n    updatedConfigurations[configuration] = !configurations[configuration];\r\n    axios\r\n      .patch(\"/api/community\", { ...updatedConfigurations })\r\n      .then(response => {\r\n        Log.info(response);\r\n        this.setState({ configurations: updatedConfigurations });\r\n      })\r\n      .catch(err => {\r\n        Log.error(err);\r\n      });\r\n  };\r\n\r\n  renderConfigurations = () => {\r\n    const { language } = this.props;\r\n    const { configurations: conf } = this.state;\r\n    const configurations = Object.keys(conf);\r\n    const values = Object.values(conf);\r\n    const texts = Texts[language].communityInterface;\r\n    return configurations.map((configuration, index) => {\r\n      return (\r\n        <div className=\"row no-gutters\" key={configuration}>\r\n          <div className=\"analytics-info\">{texts[configuration]}</div>\r\n          <Switch\r\n            checked={values[index]}\r\n            onChange={() => this.handleConfiguration(configuration)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  handleSelectChange = event => {\r\n    const { name } = event.target;\r\n    const { value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  renderCharts = () => {\r\n    const { analyticsData, chartMonth, chartNumber } = this.state;\r\n    const { language } = this.props;\r\n    const texts = Texts[language].communityInterface;\r\n    const charts = [...Array(analyticsData[0].length - 1).keys()];\r\n    const chartsData = analyticsData.map(value => ({\r\n      date: value[0],\r\n      value: parseInt(value[parseInt(chartNumber, 10) + 1], 10)\r\n    }));\r\n    const monthlyData = chartsData.filter(\r\n      value => moment(value.date).format(\"MMMM-YYYY\") === chartMonth\r\n    );\r\n    const min = 0;\r\n    const max = Math.max(chartsData.map(t => t.value));\r\n    return (\r\n      <div className=\"chartsContainer\">\r\n        <div className=\"selectChartsContainer\">\r\n          <select\r\n            className=\"chartsSelect\"\r\n            value={chartNumber}\r\n            onChange={this.handleSelectChange}\r\n            name=\"chartNumber\"\r\n          >\r\n            {charts.map(d => (\r\n              <option key={d} value={d}>\r\n                {texts.charts[d]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            className=\"chartsSelect\"\r\n            value={chartMonth}\r\n            onChange={this.handleSelectChange}\r\n            name=\"chartMonth\"\r\n          >\r\n            {[\r\n              ...new Set(\r\n                chartsData.map(data => moment(data.date).format(\"MMMM-YYYY\"))\r\n              )\r\n            ].map(d => (\r\n              <option key={d} value={d}>\r\n                {d}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <ResponsiveContainer width=\"80%\" height={300}>\r\n          <LineChart data={monthlyData}>\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"value\"\r\n              stroke=\"#00838F\"\r\n              name={texts.charts[chartNumber]}\r\n            />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis domain={[min, max]} />\r\n            <Legend verticalAlign=\"bottom\" height={36} />\r\n            <Tooltip />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].communityInterface;\r\n    const { fetchedData } = this.state;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <BackNavigation\r\n          title={texts.backNavTitle}\r\n          onClick={this.handleBackNav}\r\n        />\r\n        <div className=\"interface-container\">\r\n          {fetchedData ? (\r\n            <React.Fragment>\r\n              <div className=\"analytics-header\">{texts.analyticsHeader}</div>\r\n              {this.renderMetrics()}\r\n              <div className=\"analytics-header\">\r\n                {texts.configurationsHeader}\r\n              </div>\r\n              {this.renderConfigurations()}\r\n              <div className=\"analytics-header\">{texts.chartsHeader}</div>\r\n              {this.renderCharts()}\r\n            </React.Fragment>\r\n          ) : (\r\n            <Skeleton active paragraph={{ rows: 15 }} />\r\n          )}\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nCommunityInterface.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withLanguage(CommunityInterface);\r\n"]},"metadata":{},"sourceType":"module"}