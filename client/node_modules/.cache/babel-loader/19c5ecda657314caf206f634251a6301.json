{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\ProfileNavbar.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\n\nvar ProfileNavbar = function ProfileNavbar(_ref) {\n  var language = _ref.language,\n      history = _ref.history;\n\n  var handleActiveTab = function handleActiveTab(event) {\n    var pathname = history.location.pathname;\n    var parentPath = pathname.slice(0, pathname.lastIndexOf(\"/\"));\n    history.replace(\"\".concat(parentPath, \"/\").concat(event.target.id));\n  };\n\n  var texts = Texts[language].profileNavbar;\n  var pathname = history.location.pathname;\n  var activeTab = pathname.slice(pathname.lastIndexOf(\"/\") + 1, pathname.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profileNavbarContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row no-gutters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"info\",\n    className: activeTab === \"info\" ? \"profileTabActive\" : \"\",\n    onClick: handleActiveTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, texts.info)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"children\",\n    className: activeTab === \"children\" ? \"profileTabActive\" : \"\",\n    onClick: handleActiveTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, texts.children))));\n};\n\nexport default withRouter(withLanguage(ProfileNavbar));\nProfileNavbar.propTypes = {\n  language: PropTypes.string,\n  history: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/ProfileNavbar.js"],"names":["React","PropTypes","withRouter","Texts","withLanguage","ProfileNavbar","language","history","handleActiveTab","event","pathname","location","parentPath","slice","lastIndexOf","replace","target","id","texts","profileNavbar","activeTab","length","info","children","propTypes","string","object"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC/C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,QACvBC,QADuB,GACVH,OAAO,CAACI,QADE,CACvBD,QADuB;AAE/B,QAAME,UAAU,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,WAAT,CAAqB,GAArB,CAAlB,CAAnB;AACAP,IAAAA,OAAO,CAACQ,OAAR,WAAmBH,UAAnB,cAAiCH,KAAK,CAACO,MAAN,CAAaC,EAA9C;AACD,GAJD;;AAKA,MAAMC,KAAK,GAAGf,KAAK,CAACG,QAAD,CAAL,CAAgBa,aAA9B;AAN+C,MAOvCT,QAPuC,GAO1BH,OAAO,CAACI,QAPkB,CAOvCD,QAPuC;AAQ/C,MAAMU,SAAS,GAAGV,QAAQ,CAACG,KAAT,CAChBH,QAAQ,CAACI,WAAT,CAAqB,GAArB,IAA4B,CADZ,EAEhBJ,QAAQ,CAACW,MAFO,CAAlB;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,SAAS,EAAED,SAAS,KAAK,MAAd,GAAuB,kBAAvB,GAA4C,EAFzD;AAGE,IAAA,OAAO,EAAEZ,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGU,KAAK,CAACI,IALT,CADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,SAAS,EAAEF,SAAS,KAAK,UAAd,GAA2B,kBAA3B,GAAgD,EAF7D;AAGE,IAAA,OAAO,EAAEZ,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGU,KAAK,CAACK,QALT,CADF,CAVF,CADF,CADF;AAwBD,CApCD;;AAsCA,eAAerB,UAAU,CAACE,YAAY,CAACC,aAAD,CAAb,CAAzB;AAEAA,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,QAAQ,EAAEL,SAAS,CAACwB,MADI;AAExBlB,EAAAA,OAAO,EAAEN,SAAS,CAACyB;AAFK,CAA1B","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\n\r\nconst ProfileNavbar = ({ language, history }) => {\r\n  const handleActiveTab = event => {\r\n    const { pathname } = history.location;\r\n    const parentPath = pathname.slice(0, pathname.lastIndexOf(\"/\"));\r\n    history.replace(`${parentPath}/${event.target.id}`);\r\n  };\r\n  const texts = Texts[language].profileNavbar;\r\n  const { pathname } = history.location;\r\n  const activeTab = pathname.slice(\r\n    pathname.lastIndexOf(\"/\") + 1,\r\n    pathname.length\r\n  );\r\n  return (\r\n    <div id=\"profileNavbarContainer\">\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-1-2\">\r\n          <h1\r\n            id=\"info\"\r\n            className={activeTab === \"info\" ? \"profileTabActive\" : \"\"}\r\n            onClick={handleActiveTab}\r\n          >\r\n            {texts.info}\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-1-2\">\r\n          <h1\r\n            id=\"children\"\r\n            className={activeTab === \"children\" ? \"profileTabActive\" : \"\"}\r\n            onClick={handleActiveTab}\r\n          >\r\n            {texts.children}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(withLanguage(ProfileNavbar));\r\n\r\nProfileNavbar.propTypes = {\r\n  language: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}