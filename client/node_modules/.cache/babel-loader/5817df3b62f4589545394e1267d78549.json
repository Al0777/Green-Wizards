{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\GroupMessages.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport LazyLoad from \"react-lazyload\";\nimport AnnouncementBar from \"./AnnouncementBar\";\nimport AnnouncementHeader from \"./AnnouncementHeader\";\nimport AnnouncementMain from \"./AnnouncementMain\";\nimport AnnouncementReplies from \"./AnnouncementReplies\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Log from \"./Log\";\n\nvar GroupMessages = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupMessages, _React$Component);\n\n  var _super = _createSuper(GroupMessages);\n\n  function GroupMessages() {\n    var _this;\n\n    _classCallCheck(this, GroupMessages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fetchedAnnouncements: false\n    };\n\n    _this.refresh = function () {\n      var groupId = _this.props.groupId;\n      axios.get(\"/api/groups/\".concat(groupId, \"/announcements\")).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n          var announcements;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  announcements = response.data;\n                  _context.next = 3;\n                  return _this.setState({\n                    announcements: announcements\n                  });\n\n                case 3:\n                  _context.next = 5;\n                  return _this.announcementsStart.scrollIntoView({\n                    behavior: \"smooth\"\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        Log.error(error);\n      });\n    };\n\n    _this.renderAnnouncements = function () {\n      var announcements = _this.state.announcements;\n      var userIsAdmin = _this.props.userIsAdmin;\n      var length = announcements.length;\n\n      var blocks = _toConsumableArray(Array(Math.ceil(length / 2)).keys());\n\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, blocks.map(function (block) {\n        var indexes;\n\n        if (length <= 2) {\n          indexes = _toConsumableArray(Array(length).keys());\n        } else {\n          indexes = _toConsumableArray(Array((block + 1) * 2 <= length ? 2 : length - block * 2).keys()).map(function (x) {\n            return block * 2 + x;\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(LazyLoad, {\n          height: 450,\n          once: true,\n          offset: 100,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, indexes.map(function (index) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            style: {\n              padding: \"2rem 0\"\n            },\n            key: index,\n            ref: function ref(_ref2) {\n              if (index === 0) {\n                _this.announcementsStart = _ref2;\n              }\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            id: \"announcementContainer\",\n            className: \"horizontalCenter\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(AnnouncementHeader, {\n            userId: announcements[index].user_id,\n            createdAt: announcements[index].createdAt,\n            userIsAdmin: userIsAdmin,\n            handleRefresh: _this.refresh,\n            announcementId: announcements[index].announcement_id,\n            groupId: announcements[index].group_id,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(AnnouncementMain, {\n            message: announcements[index].body,\n            images: announcements[index].images,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(AnnouncementReplies, {\n            announcementId: announcements[index].announcement_id,\n            groupId: announcements[index].group_id,\n            userIsAdmin: userIsAdmin,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }\n          })));\n        }));\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(GroupMessages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var groupId = this.props.groupId;\n      axios.get(\"/api/groups/\".concat(groupId, \"/announcements\")).then(function (response) {\n        var announcements = response.data;\n\n        _this2.setState({\n          fetchedAnnouncements: true,\n          announcements: announcements\n        });\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedAnnouncements: true,\n          announcements: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fetchedAnnouncements = this.state.fetchedAnnouncements;\n      var groupId = this.props.groupId;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"announcementsContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, fetchedAnnouncements ? this.renderAnnouncements() : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 62\n        }\n      }), /*#__PURE__*/React.createElement(AnnouncementBar, {\n        groupId: groupId,\n        handleRefresh: this.refresh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return GroupMessages;\n}(React.Component);\n\nexport default GroupMessages;\nGroupMessages.propTypes = {\n  groupId: PropTypes.string,\n  userIsAdmin: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/GroupMessages.js"],"names":["React","PropTypes","axios","LazyLoad","AnnouncementBar","AnnouncementHeader","AnnouncementMain","AnnouncementReplies","LoadingSpinner","Log","GroupMessages","state","fetchedAnnouncements","refresh","groupId","props","get","then","response","announcements","data","setState","announcementsStart","scrollIntoView","behavior","catch","error","renderAnnouncements","userIsAdmin","length","blocks","Array","Math","ceil","keys","map","block","indexes","x","index","padding","ref","user_id","createdAt","announcement_id","group_id","body","images","Component","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport AnnouncementBar from \"./AnnouncementBar\";\r\nimport AnnouncementHeader from \"./AnnouncementHeader\";\r\nimport AnnouncementMain from \"./AnnouncementMain\";\r\nimport AnnouncementReplies from \"./AnnouncementReplies\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Log from \"./Log\";\r\n\r\nclass GroupMessages extends React.Component {\r\n  state = { fetchedAnnouncements: false };\r\n\r\n  componentDidMount() {\r\n    const { groupId } = this.props;\r\n    axios\r\n      .get(`/api/groups/${groupId}/announcements`)\r\n      .then(response => {\r\n        const announcements = response.data;\r\n        this.setState({\r\n          fetchedAnnouncements: true,\r\n          announcements\r\n        });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({ fetchedAnnouncements: true, announcements: [] });\r\n      });\r\n  }\r\n\r\n  refresh = () => {\r\n    const { groupId } = this.props;\r\n    axios\r\n      .get(`/api/groups/${groupId}/announcements`)\r\n      .then(async response => {\r\n        const announcements = response.data;\r\n        await this.setState({\r\n          announcements\r\n        });\r\n        await this.announcementsStart.scrollIntoView({ behavior: \"smooth\" });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n      });\r\n  };\r\n\r\n  renderAnnouncements = () => {\r\n    const { announcements } = this.state;\r\n    const { userIsAdmin } = this.props;\r\n    const { length } = announcements;\r\n    const blocks = [...Array(Math.ceil(length / 2)).keys()];\r\n    return (\r\n      <ul>\r\n        {blocks.map(block => {\r\n          let indexes;\r\n          if (length <= 2) {\r\n            indexes = [...Array(length).keys()];\r\n          } else {\r\n            indexes = [\r\n              ...Array(\r\n                (block + 1) * 2 <= length ? 2 : length - block * 2\r\n              ).keys()\r\n            ].map(x => block * 2 + x);\r\n          }\r\n          return (\r\n            <LazyLoad height={450} once offset={100}>\r\n              {indexes.map(index => (\r\n                <li\r\n                  style={{ padding: \"2rem 0\" }}\r\n                  key={index}\r\n                  ref={ref => {\r\n                    if (index === 0) {\r\n                      this.announcementsStart = ref;\r\n                    }\r\n                  }}\r\n                >\r\n                  <div id=\"announcementContainer\" className=\"horizontalCenter\">\r\n                    <AnnouncementHeader\r\n                      userId={announcements[index].user_id}\r\n                      createdAt={announcements[index].createdAt}\r\n                      userIsAdmin={userIsAdmin}\r\n                      handleRefresh={this.refresh}\r\n                      announcementId={announcements[index].announcement_id}\r\n                      groupId={announcements[index].group_id}\r\n                    />\r\n                    <AnnouncementMain\r\n                      message={announcements[index].body}\r\n                      images={announcements[index].images}\r\n                    />\r\n                    <AnnouncementReplies\r\n                      announcementId={announcements[index].announcement_id}\r\n                      groupId={announcements[index].group_id}\r\n                      userIsAdmin={userIsAdmin}\r\n                    />\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </LazyLoad>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fetchedAnnouncements } = this.state;\r\n    const { groupId } = this.props;\r\n    return (\r\n      <div id=\"announcementsContainer\">\r\n        {fetchedAnnouncements ? this.renderAnnouncements() : <LoadingSpinner />}\r\n        <AnnouncementBar groupId={groupId} handleRefresh={this.refresh} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GroupMessages;\r\n\r\nGroupMessages.propTypes = {\r\n  groupId: PropTypes.string,\r\n  userIsAdmin: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}