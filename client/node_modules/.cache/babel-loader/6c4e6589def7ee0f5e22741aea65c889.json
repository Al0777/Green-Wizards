{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\AnnouncementReplies.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport withLanguage from \"./LanguageContext\";\nimport Reply from \"./Reply\";\nimport Texts from \"../Constants/Texts\";\nimport Log from \"./Log\";\n\nvar AnnouncementReplies = /*#__PURE__*/function (_React$Component) {\n  _inherits(AnnouncementReplies, _React$Component);\n\n  var _super = _createSuper(AnnouncementReplies);\n\n  function AnnouncementReplies(props) {\n    var _this;\n\n    _classCallCheck(this, AnnouncementReplies);\n\n    _this = _super.call(this, props);\n\n    _this.refresh = function () {\n      var groupId = _this.props.groupId;\n      var announcementId = _this.props.announcementId;\n      axios.get(\"/api/groups/\".concat(groupId, \"/announcements/\").concat(announcementId, \"/replies\")).then(function (response) {\n        var replies = response.data;\n\n        _this.setState({\n          replies: replies\n        });\n      }).catch(function (error) {\n        Log.error(error);\n      });\n    };\n\n    _this.handleSend = function () {\n      var _this$props = _this.props,\n          groupId = _this$props.groupId,\n          announcementId = _this$props.announcementId;\n      var newReply = _this.state.newReply;\n      axios.post(\"/api/groups/\".concat(groupId, \"/announcements/\").concat(announcementId, \"/replies\"), {\n        user_id: JSON.parse(localStorage.getItem(\"user\")).id,\n        message: newReply\n      }).then(function (response) {\n        Log.info(response);\n\n        _this.refresh();\n      }).catch(function (error) {\n        Log.error(error);\n      });\n\n      _this.setState({\n        newReply: \"\"\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        newReply: event.target.value\n      });\n    };\n\n    _this.handleShow = function () {\n      var showReplies = _this.state.showReplies;\n\n      _this.setState({\n        showReplies: !showReplies\n      });\n    };\n\n    _this.renderReplies = function () {\n      var replies = _this.state.replies;\n      var _this$props2 = _this.props,\n          groupId = _this$props2.groupId,\n          userIsAdmin = _this$props2.userIsAdmin;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, replies.map(function (reply, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Reply, {\n          reply: reply,\n          handleRefresh: _this.refresh,\n          groupId: groupId,\n          userIsAdmin: userIsAdmin,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }));\n      }));\n    };\n\n    _this.handleEnter = function (event) {\n      if (event.keyCode === 13) _this.handleSend();\n    };\n\n    _this.state = {\n      newReply: \"\",\n      showReplies: false,\n      fetchedReplies: false\n    };\n    return _this;\n  }\n\n  _createClass(AnnouncementReplies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var groupId = this.props.groupId;\n      var announcementId = this.props.announcementId;\n      axios.get(\"/api/groups/\".concat(groupId, \"/announcements/\").concat(announcementId, \"/replies\")).then(function (response) {\n        var replies = response.data;\n\n        _this2.setState({\n          fetchedReplies: true,\n          replies: replies\n        });\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedReplies: true,\n          replies: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var language = this.props.language;\n      var _this$state = this.state,\n          showReplies = _this$state.showReplies,\n          fetchedReplies = _this$state.fetchedReplies,\n          newReply = _this$state.newReply;\n      var texts = Texts[language].announcementReplies;\n      var showRepliesIcon = showReplies ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\";\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"showRepliesContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"transparentButton\",\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: showRepliesIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"announcementRepliesContainer\",\n        style: showReplies ? {} : {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, fetchedReplies ? this.renderReplies() : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        id: \"newReplyContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: texts.new,\n        value: newReply,\n        onChange: this.handleChange,\n        className: \"verticalCenter\",\n        onKeyUp: this.handleEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparentButton center\",\n        onClick: this.handleSend,\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-paper-plane\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }]);\n\n  return AnnouncementReplies;\n}(React.Component);\n\nAnnouncementReplies.propTypes = {\n  announcementId: PropTypes.string,\n  groupId: PropTypes.string,\n  userIsAdmin: PropTypes.bool,\n  language: PropTypes.string\n};\nexport default withLanguage(AnnouncementReplies);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/AnnouncementReplies.js"],"names":["React","PropTypes","axios","withLanguage","Reply","Texts","Log","AnnouncementReplies","props","refresh","groupId","announcementId","get","then","response","replies","data","setState","catch","error","handleSend","newReply","state","post","user_id","JSON","parse","localStorage","getItem","id","message","info","handleChange","event","target","value","handleShow","showReplies","renderReplies","userIsAdmin","map","reply","index","handleEnter","keyCode","fetchedReplies","language","texts","announcementReplies","showRepliesIcon","display","new","Component","propTypes","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport Reply from \"./Reply\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport Log from \"./Log\";\r\n\r\nclass AnnouncementReplies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newReply: \"\",\r\n      showReplies: false,\r\n      fetchedReplies: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { groupId } = this.props;\r\n    const { announcementId } = this.props;\r\n    axios\r\n      .get(`/api/groups/${groupId}/announcements/${announcementId}/replies`)\r\n      .then(response => {\r\n        const replies = response.data;\r\n        this.setState({ fetchedReplies: true, replies });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({ fetchedReplies: true, replies: [] });\r\n      });\r\n  }\r\n\r\n  refresh = () => {\r\n    const { groupId } = this.props;\r\n    const { announcementId } = this.props;\r\n    axios\r\n      .get(`/api/groups/${groupId}/announcements/${announcementId}/replies`)\r\n      .then(response => {\r\n        const replies = response.data;\r\n        this.setState({ replies });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n      });\r\n  };\r\n\r\n  handleSend = () => {\r\n    const { groupId, announcementId } = this.props;\r\n    const { newReply } = this.state;\r\n    axios\r\n      .post(`/api/groups/${groupId}/announcements/${announcementId}/replies`, {\r\n        user_id: JSON.parse(localStorage.getItem(\"user\")).id,\r\n        message: newReply\r\n      })\r\n      .then(response => {\r\n        Log.info(response);\r\n        this.refresh();\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n      });\r\n    this.setState({ newReply: \"\" });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ newReply: event.target.value });\r\n  };\r\n\r\n  handleShow = () => {\r\n    const { showReplies } = this.state;\r\n    this.setState({ showReplies: !showReplies });\r\n  };\r\n\r\n  renderReplies = () => {\r\n    const { replies } = this.state;\r\n    const { groupId, userIsAdmin } = this.props;\r\n    return (\r\n      <ul>\r\n        {replies.map((reply, index) => (\r\n          <li key={index}>\r\n            <Reply\r\n              reply={reply}\r\n              handleRefresh={this.refresh}\r\n              groupId={groupId}\r\n              userIsAdmin={userIsAdmin}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  handleEnter = event => {\r\n    if (event.keyCode === 13) this.handleSend();\r\n  };\r\n\r\n  render() {\r\n    const { language } = this.props;\r\n    const { showReplies, fetchedReplies, newReply } = this.state;\r\n    const texts = Texts[language].announcementReplies;\r\n    const showRepliesIcon = showReplies\r\n      ? \"fas fa-chevron-up\"\r\n      : \"fas fa-chevron-down\";\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"showRepliesContainer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"transparentButton\"\r\n            onClick={this.handleShow}\r\n          >\r\n            <i className={showRepliesIcon} />\r\n          </button>\r\n        </div>\r\n        <div\r\n          id=\"announcementRepliesContainer\"\r\n          style={showReplies ? {} : { display: \"none\" }}\r\n        >\r\n          {fetchedReplies ? this.renderReplies() : <div />}\r\n          <div className=\"row no-gutters\" id=\"newReplyContainer\">\r\n            <div className=\"col-8-10\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={texts.new}\r\n                value={newReply}\r\n                onChange={this.handleChange}\r\n                className=\"verticalCenter\"\r\n                onKeyUp={this.handleEnter}\r\n              />\r\n            </div>\r\n            <div className=\"col-2-10\">\r\n              <button\r\n                className=\"transparentButton center\"\r\n                onClick={this.handleSend}\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fas fa-paper-plane\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nAnnouncementReplies.propTypes = {\r\n  announcementId: PropTypes.string,\r\n  groupId: PropTypes.string,\r\n  userIsAdmin: PropTypes.bool,\r\n  language: PropTypes.string\r\n};\r\n\r\nexport default withLanguage(AnnouncementReplies);\r\n"]},"metadata":{},"sourceType":"module"}