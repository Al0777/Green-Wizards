{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Green-Wizards\\\\client\\\\src\\\\components\\\\GroupMainScreen.js\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport GroupNavbar from \"./GroupNavbar\";\nimport Log from \"./Log\";\nvar GroupInfo = Loadable({\n  loader: function loader() {\n    return import(\"./GroupInfo\");\n  },\n  loading: function loading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }\n    });\n  }\n});\nvar GroupMembers = Loadable({\n  loader: function loader() {\n    return import(\"./GroupMembers\");\n  },\n  loading: function loading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }\n    });\n  }\n});\nvar GroupActivities = Loadable({\n  loader: function loader() {\n    return import(\"./GroupActivities\");\n  },\n  loading: function loading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }\n    });\n  }\n});\nvar GroupCalendar = Loadable({\n  loader: function loader() {\n    return import(\"./GroupCalendar\");\n  },\n  loading: function loading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }\n    });\n  }\n});\nvar GroupChat = Loadable({\n  loader: function loader() {\n    return import(\"./GroupChat\");\n  },\n  loading: function loading() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }\n    });\n  }\n});\n\nvar getGroupMembers = function getGroupMembers(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId, \"/members\")).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return [];\n  });\n};\n\nvar getGroup = function getGroup(groupId) {\n  return axios.get(\"/api/groups/\".concat(groupId)).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    Log.error(error);\n    return {\n      name: \"\",\n      group_id: \"\"\n    };\n  });\n};\n\nvar GroupMainScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(GroupMainScreen, _React$Component);\n\n  var _super = _createSuper(GroupMainScreen);\n\n  function GroupMainScreen(props) {\n    var _this2;\n\n    _classCallCheck(this, GroupMainScreen);\n\n    _this2 = _super.call(this, props);\n\n    _this2.enableNavigation = function () {\n      _this2.setState({\n        allowNavigation: true\n      });\n    };\n\n    var _this2$props = _this2.props,\n        history = _this2$props.history,\n        match = _this2$props.match;\n    var pathname = history.location.pathname;\n    var groupId = match.params.groupId;\n    var activeTab = pathname.substr(pathname.lastIndexOf(\"/\") + 1, pathname.length - 1);\n\n    if (activeTab === \"parents\" || activeTab === \"children\") {\n      activeTab = \"members\";\n    }\n\n    _this2.state = {\n      groupId: groupId,\n      allowNavigation: false,\n      fetchedGroup: false\n    };\n    return _this2;\n  }\n\n  _createClass(GroupMainScreen, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var history, groupId, group, user, allowNavigation, userIsAdmin;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                history = this.props.history;\n                groupId = this.state.groupId;\n                _context.next = 4;\n                return getGroup(groupId);\n\n              case 4:\n                group = _context.sent;\n                _context.next = 7;\n                return getGroupMembers(groupId);\n\n              case 7:\n                group.members = _context.sent;\n                user = group.members.filter(function (member) {\n                  return member.user_id === JSON.parse(localStorage.getItem(\"user\")).id && member.user_accepted && member.group_accepted;\n                });\n                allowNavigation = user.length > 0;\n                if (!allowNavigation) history.replace(\"/groups/\".concat(groupId, \"/info\"));\n                userIsAdmin = user.length > 0 ? user[0].admin : false;\n                this.setState({\n                  allowNavigation: allowNavigation,\n                  userIsAdmin: userIsAdmin,\n                  group: group,\n                  fetchedGroup: true\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          fetchedGroup = _this$state.fetchedGroup,\n          group = _this$state.group,\n          userIsAdmin = _this$state.userIsAdmin,\n          allowNavigation = _this$state.allowNavigation;\n      var match = this.props.match;\n      var currentPath = match.url;\n      return fetchedGroup ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"groupMainContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(currentPath, \"/info\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupInfo, Object.assign({}, props, {\n            group: group,\n            enableNavigation: _this3.enableNavigation,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(currentPath, \"/chat\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupChat, Object.assign({}, props, {\n            group: group,\n            userIsAdmin: userIsAdmin,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(currentPath, \"/members\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupMembers, Object.assign({}, props, {\n            group: group,\n            userIsAdmin: userIsAdmin,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(currentPath, \"/activities\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupActivities, Object.assign({}, props, {\n            group: group,\n            userIsAdmin: userIsAdmin,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(currentPath, \"/calendar\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(GroupCalendar, Object.assign({}, props, {\n            group: group,\n            userIsAdmin: userIsAdmin,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(GroupNavbar, {\n        allowNavigation: allowNavigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      })) : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return GroupMainScreen;\n}(React.Component);\n\nexport { GroupMainScreen as default };\nGroupMainScreen.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.object,\n  group: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Green-Wizards/client/src/components/GroupMainScreen.js"],"names":["React","Route","Switch","Loadable","axios","PropTypes","LoadingSpinner","GroupNavbar","Log","GroupInfo","loader","loading","GroupMembers","GroupActivities","GroupCalendar","GroupChat","getGroupMembers","groupId","get","then","response","data","catch","error","getGroup","name","group_id","GroupMainScreen","props","enableNavigation","setState","allowNavigation","history","match","pathname","location","params","activeTab","substr","lastIndexOf","length","state","fetchedGroup","group","members","user","filter","member","user_id","JSON","parse","localStorage","getItem","id","user_accepted","group_accepted","replace","userIsAdmin","admin","currentPath","url","Component","propTypes","object"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,IAAMC,SAAS,GAAGN,QAAQ,CAAC;AACzBO,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,aAAP,CAAN;AAAA,GADiB;AAEzBC,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA;AAFgB,CAAD,CAA1B;AAIA,IAAMC,YAAY,GAAGT,QAAQ,CAAC;AAC5BO,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GADoB;AAE5BC,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA;AAFmB,CAAD,CAA7B;AAIA,IAAME,eAAe,GAAGV,QAAQ,CAAC;AAC/BO,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,mBAAP,CAAN;AAAA,GADuB;AAE/BC,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA;AAFsB,CAAD,CAAhC;AAIA,IAAMG,aAAa,GAAGX,QAAQ,CAAC;AAC7BO,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,iBAAP,CAAN;AAAA,GADqB;AAE7BC,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA;AAFoB,CAAD,CAA9B;AAIA,IAAMI,SAAS,GAAGZ,QAAQ,CAAC;AACzBO,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,aAAP,CAAN;AAAA,GADiB;AAEzBC,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN;AAAA;AAFgB,CAAD,CAA1B;;AAKA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO,EAAI;AACjC,SAAOb,KAAK,CACTc,GADI,uBACeD,OADf,eAEJE,IAFI,CAEC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACD,GAJI,EAKJC,KALI,CAKE,UAAAC,KAAK,EAAI;AACdf,IAAAA,GAAG,CAACe,KAAJ,CAAUA,KAAV;AACA,WAAO,EAAP;AACD,GARI,CAAP;AASD,CAVD;;AAWA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAP,OAAO,EAAI;AAC1B,SAAOb,KAAK,CACTc,GADI,uBACeD,OADf,GAEJE,IAFI,CAEC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAhB;AACD,GAJI,EAKJC,KALI,CAKE,UAAAC,KAAK,EAAI;AACdf,IAAAA,GAAG,CAACe,KAAJ,CAAUA,KAAV;AACA,WAAO;AACLE,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAXI,CAAP;AAYD,CAbD;;IAeqBC,e;;;;;AACnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;;AADiB,WAyCnBC,gBAzCmB,GAyCA,YAAM;AACvB,aAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KA3CkB;;AAAA,uBAEU,OAAKH,KAFf;AAAA,QAETI,OAFS,gBAETA,OAFS;AAAA,QAEAC,KAFA,gBAEAA,KAFA;AAAA,QAGTC,QAHS,GAGIF,OAAO,CAACG,QAHZ,CAGTD,QAHS;AAAA,QAITjB,OAJS,GAIGgB,KAAK,CAACG,MAJT,CAITnB,OAJS;AAKjB,QAAIoB,SAAS,GAAGH,QAAQ,CAACI,MAAT,CACdJ,QAAQ,CAACK,WAAT,CAAqB,GAArB,IAA4B,CADd,EAEdL,QAAQ,CAACM,MAAT,GAAkB,CAFJ,CAAhB;;AAIA,QAAIH,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,UAA7C,EAAyD;AACvDA,MAAAA,SAAS,GAAG,SAAZ;AACD;;AACD,WAAKI,KAAL,GAAa;AACXxB,MAAAA,OAAO,EAAPA,OADW;AAEXc,MAAAA,eAAe,EAAE,KAFN;AAGXW,MAAAA,YAAY,EAAE;AAHH,KAAb;AAZiB;AAiBlB;;;;;;;;;;;AAGSV,gBAAAA,O,GAAY,KAAKJ,K,CAAjBI,O;AACAf,gBAAAA,O,GAAY,KAAKwB,K,CAAjBxB,O;;uBACYO,QAAQ,CAACP,OAAD,C;;;AAAtB0B,gBAAAA,K;;uBACgB3B,eAAe,CAACC,OAAD,C;;;AAArC0B,gBAAAA,KAAK,CAACC,O;AACAC,gBAAAA,I,GAAOF,KAAK,CAACC,OAAN,CAAcE,MAAd,CACX,UAAAC,MAAM;AAAA,yBACJA,MAAM,CAACC,OAAP,KAAmBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,EAA5D,IACAN,MAAM,CAACO,aADP,IAEAP,MAAM,CAACQ,cAHH;AAAA,iBADK,C;AAMPxB,gBAAAA,e,GAAkBc,IAAI,CAACL,MAAL,GAAc,C;AACtC,oBAAI,CAACT,eAAL,EAAsBC,OAAO,CAACwB,OAAR,mBAA2BvC,OAA3B;AAChBwC,gBAAAA,W,GAAcZ,IAAI,CAACL,MAAL,GAAc,CAAd,GAAkBK,IAAI,CAAC,CAAD,CAAJ,CAAQa,KAA1B,GAAkC,K;AACtD,qBAAK5B,QAAL,CAAc;AACZC,kBAAAA,eAAe,EAAfA,eADY;AAEZ0B,kBAAAA,WAAW,EAAXA,WAFY;AAGZd,kBAAAA,KAAK,EAALA,KAHY;AAIZD,kBAAAA,YAAY,EAAE;AAJF,iBAAd;;;;;;;;;;;;;;;;;;6BAYO;AAAA;;AAAA,wBACuD,KAAKD,KAD5D;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBc,WADtB,eACsBA,WADtB;AAAA,UACmC1B,eADnC,eACmCA,eADnC;AAAA,UAECE,KAFD,GAEW,KAAKL,KAFhB,CAECK,KAFD;AAAA,UAGM0B,WAHN,GAGsB1B,KAHtB,CAGC2B,GAHD;AAIP,aAAOlB,YAAY,gBACjB;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKiB,WAAL,UADN;AAEE,QAAA,MAAM,EAAE,gBAAA/B,KAAK;AAAA,8BACX,oBAAC,SAAD,oBACMA,KADN;AAEE,YAAA,KAAK,EAAEe,KAFT;AAGE,YAAA,gBAAgB,EAAE,MAAI,CAACd,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAWE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAK8B,WAAL,UADN;AAEE,QAAA,MAAM,EAAE,gBAAA/B,KAAK;AAAA,8BACX,oBAAC,SAAD,oBAAeA,KAAf;AAAsB,YAAA,KAAK,EAAEe,KAA7B;AAAoC,YAAA,WAAW,EAAEc,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,eAiBE,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKE,WAAL,aADN;AAEE,QAAA,MAAM,EAAE,gBAAA/B,KAAK;AAAA,8BACX,oBAAC,YAAD,oBACMA,KADN;AAEE,YAAA,KAAK,EAAEe,KAFT;AAGE,YAAA,WAAW,EAAEc,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,eA2BE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKE,WAAL,gBAFN;AAGE,QAAA,MAAM,EAAE,gBAAA/B,KAAK;AAAA,8BACX,oBAAC,eAAD,oBACMA,KADN;AAEE,YAAA,KAAK,EAAEe,KAFT;AAGE,YAAA,WAAW,EAAEc,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,eAsCE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKE,WAAL,cAFN;AAGE,QAAA,MAAM,EAAE,gBAAA/B,KAAK;AAAA,8BACX,oBAAC,aAAD,oBACMA,KADN;AAEE,YAAA,KAAK,EAAEe,KAFT;AAGE,YAAA,WAAW,EAAEc,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtCF,CADF,eAmDE,oBAAC,WAAD;AAAa,QAAA,eAAe,EAAE1B,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnDF,CADiB,gBAuDjB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvDF;AAyDD;;;;EA3G0C/B,KAAK,CAAC6D,S;;SAA9BlC,e;AA8GrBA,eAAe,CAACmC,SAAhB,GAA4B;AAC1B9B,EAAAA,OAAO,EAAE3B,SAAS,CAAC0D,MADO;AAE1B9B,EAAAA,KAAK,EAAE5B,SAAS,CAAC0D,MAFS;AAG1BpB,EAAAA,KAAK,EAAEtC,SAAS,CAAC0D;AAHS,CAA5B","sourcesContent":["import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport GroupNavbar from \"./GroupNavbar\";\r\nimport Log from \"./Log\";\r\n\r\nconst GroupInfo = Loadable({\r\n  loader: () => import(\"./GroupInfo\"),\r\n  loading: () => <div />\r\n});\r\nconst GroupMembers = Loadable({\r\n  loader: () => import(\"./GroupMembers\"),\r\n  loading: () => <div />\r\n});\r\nconst GroupActivities = Loadable({\r\n  loader: () => import(\"./GroupActivities\"),\r\n  loading: () => <div />\r\n});\r\nconst GroupCalendar = Loadable({\r\n  loader: () => import(\"./GroupCalendar\"),\r\n  loading: () => <div />\r\n});\r\nconst GroupChat = Loadable({\r\n  loader: () => import(\"./GroupChat\"),\r\n  loading: () => <div />\r\n});\r\n\r\nconst getGroupMembers = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}/members`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return [];\r\n    });\r\n};\r\nconst getGroup = groupId => {\r\n  return axios\r\n    .get(`/api/groups/${groupId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      Log.error(error);\r\n      return {\r\n        name: \"\",\r\n        group_id: \"\"\r\n      };\r\n    });\r\n};\r\n\r\nexport default class GroupMainScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { history, match } = this.props;\r\n    const { pathname } = history.location;\r\n    const { groupId } = match.params;\r\n    let activeTab = pathname.substr(\r\n      pathname.lastIndexOf(\"/\") + 1,\r\n      pathname.length - 1\r\n    );\r\n    if (activeTab === \"parents\" || activeTab === \"children\") {\r\n      activeTab = \"members\";\r\n    }\r\n    this.state = {\r\n      groupId,\r\n      allowNavigation: false,\r\n      fetchedGroup: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { history } = this.props;\r\n    const { groupId } = this.state;\r\n    const group = await getGroup(groupId);\r\n    group.members = await getGroupMembers(groupId);\r\n    const user = group.members.filter(\r\n      member =>\r\n        member.user_id === JSON.parse(localStorage.getItem(\"user\")).id &&\r\n        member.user_accepted &&\r\n        member.group_accepted\r\n    );\r\n    const allowNavigation = user.length > 0;\r\n    if (!allowNavigation) history.replace(`/groups/${groupId}/info`);\r\n    const userIsAdmin = user.length > 0 ? user[0].admin : false;\r\n    this.setState({\r\n      allowNavigation,\r\n      userIsAdmin,\r\n      group,\r\n      fetchedGroup: true\r\n    });\r\n  }\r\n\r\n  enableNavigation = () => {\r\n    this.setState({ allowNavigation: true });\r\n  };\r\n\r\n  render() {\r\n    const { fetchedGroup, group, userIsAdmin, allowNavigation } = this.state;\r\n    const { match } = this.props;\r\n    const { url: currentPath } = match;\r\n    return fetchedGroup ? (\r\n      <div id=\"groupMainContainer\">\r\n        <Switch>\r\n          <Route\r\n            path={`${currentPath}/info`}\r\n            render={props => (\r\n              <GroupInfo\r\n                {...props}\r\n                group={group}\r\n                enableNavigation={this.enableNavigation}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path={`${currentPath}/chat`}\r\n            render={props => (\r\n              <GroupChat {...props} group={group} userIsAdmin={userIsAdmin} />\r\n            )}\r\n          />\r\n          <Route\r\n            path={`${currentPath}/members`}\r\n            render={props => (\r\n              <GroupMembers\r\n                {...props}\r\n                group={group}\r\n                userIsAdmin={userIsAdmin}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={`${currentPath}/activities`}\r\n            render={props => (\r\n              <GroupActivities\r\n                {...props}\r\n                group={group}\r\n                userIsAdmin={userIsAdmin}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={`${currentPath}/calendar`}\r\n            render={props => (\r\n              <GroupCalendar\r\n                {...props}\r\n                group={group}\r\n                userIsAdmin={userIsAdmin}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n        <GroupNavbar allowNavigation={allowNavigation} />\r\n      </div>\r\n    ) : (\r\n      <LoadingSpinner />\r\n    );\r\n  }\r\n}\r\n\r\nGroupMainScreen.propTypes = {\r\n  history: PropTypes.object,\r\n  match: PropTypes.object,\r\n  group: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}