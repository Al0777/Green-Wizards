{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\SelectLanguage.js\";\n\nimport React from \"react\";\nimport { Menu, Dropdown } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport LanguageIcon from \"./LanguageIcon\";\nimport withLanguage from \"./LanguageContext\";\n\nvar SelectLanguage = function SelectLanguage(_ref) {\n  var language = _ref.language,\n      updateLanguage = _ref.updateLanguage;\n\n  var handleClick = function handleClick(e) {\n    updateLanguage(e.key);\n  };\n\n  var menuStyle = {\n    width: \"4rem\",\n    borderRadius: \"20px\",\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    WebkitBoxShadow: \"none\",\n    MozBoxShadow: \"none\"\n  };\n  var menuItemStyle = {\n    padding: \"0.3rem 0\"\n  };\n  var languageIconStyle = {\n    position: \"relative\",\n    left: \"0\"\n  };\n  var appLanguages = process.env.REACT_APP_CITYLAB_LANGUAGES.split(' ');\n  var menu = /*#__PURE__*/React.createElement(Menu, {\n    style: menuStyle,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, appLanguages.map(function (lang) {\n    return lang !== language ? /*#__PURE__*/React.createElement(Menu.Item, {\n      key: lang,\n      style: menuItemStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LanguageIcon, {\n      style: languageIconStyle,\n      language: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    })) : \"\";\n  }));\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    trigger: [\"hover\", \"click\"],\n    overlay: menu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ant-dropdown-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LanguageIcon, {\n    style: menuItemStyle,\n    language: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nSelectLanguage.propTypes = {\n  language: PropTypes.string,\n  updateLanguage: PropTypes.func\n};\nexport default withLanguage(SelectLanguage);","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/SelectLanguage.js"],"names":["React","Menu","Dropdown","PropTypes","LanguageIcon","withLanguage","SelectLanguage","language","updateLanguage","handleClick","e","key","menuStyle","width","borderRadius","backgroundColor","boxShadow","WebkitBoxShadow","MozBoxShadow","menuItemStyle","padding","languageIconStyle","position","left","appLanguages","process","env","REACT_APP_CITYLAB_LANGUAGES","split","menu","map","lang","propTypes","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,MAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AACvD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,GAAH,CAAd;AACD,GAFD;;AAIA,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,MADS;AAEhBC,IAAAA,YAAY,EAAE,MAFE;AAGhBC,IAAAA,eAAe,EAAE,aAHD;AAIhBC,IAAAA,SAAS,EAAE,MAJK;AAKhBC,IAAAA,eAAe,EAAE,MALD;AAMhBC,IAAAA,YAAY,EAAE;AANE,GAAlB;AAQA,MAAMC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE;AADW,GAAtB;AAGA,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,QAAQ,EAAE,UADc;AAExBC,IAAAA,IAAI,EAAE;AAFkB,GAA1B;AAIA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,CAAwCC,KAAxC,CAA8C,GAA9C,CAArB;AAEA,MAAMC,IAAI,gBACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,SAAb;AAAwB,IAAA,OAAO,EAAEH,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,YAAY,CAACM,GAAb,CAAiB,UAAAC,IAAI;AAAA,WACpBA,IAAI,KAAKxB,QAAT,gBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAEwB,IAAhB;AAAsB,MAAA,KAAK,EAAEZ,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEE,iBAArB;AAAwC,MAAA,QAAQ,EAAEU,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,GAKE,EANkB;AAAA,GAArB,CADH,CADF;AAaA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CAAnB;AAAuC,IAAA,OAAO,EAAEF,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,aAArB;AAAoC,IAAA,QAAQ,EAAEZ,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CA1CD;;AA4CAD,cAAc,CAAC0B,SAAf,GAA2B;AACzBzB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC8B,MADK;AAEzBzB,EAAAA,cAAc,EAAEL,SAAS,CAAC+B;AAFD,CAA3B;AAKA,eAAe7B,YAAY,CAACC,cAAD,CAA3B","sourcesContent":["import React from \"react\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport LanguageIcon from \"./LanguageIcon\";\r\nimport withLanguage from \"./LanguageContext\";\r\n\r\nconst SelectLanguage = ({ language, updateLanguage }) => {\r\n  const handleClick = e => {\r\n    updateLanguage(e.key);\r\n  };\r\n\r\n  const menuStyle = {\r\n    width: \"4rem\",\r\n    borderRadius: \"20px\",\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    WebkitBoxShadow: \"none\",\r\n    MozBoxShadow: \"none\"\r\n  };\r\n  const menuItemStyle = {\r\n    padding: \"0.3rem 0\"\r\n  };\r\n  const languageIconStyle = {\r\n    position: \"relative\",\r\n    left: \"0\"\r\n  };\r\n  const appLanguages = process.env.REACT_APP_CITYLAB_LANGUAGES.split(' ');\r\n\r\n  const menu = (\r\n    <Menu style={menuStyle} onClick={handleClick}>\r\n      {appLanguages.map(lang =>\r\n        lang !== language ? (\r\n          <Menu.Item key={lang} style={menuItemStyle}>\r\n            <LanguageIcon style={languageIconStyle} language={lang} />\r\n          </Menu.Item>\r\n        ) : (\r\n          \"\"\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown trigger={[\"hover\", \"click\"]} overlay={menu}>\r\n      <div className=\"ant-dropdown-link\">\r\n        <LanguageIcon style={menuItemStyle} language={language} />\r\n      </div>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nSelectLanguage.propTypes = {\r\n  language: PropTypes.string,\r\n  updateLanguage: PropTypes.func\r\n};\r\n\r\nexport default withLanguage(SelectLanguage);\r\n"]},"metadata":{},"sourceType":"module"}