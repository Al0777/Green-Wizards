{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nucle\\\\Documents\\\\GitHub\\\\Families_Share-platform\\\\client\\\\src\\\\components\\\\CreateGroupStepper.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\nimport autosize from \"autosize\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Texts from \"../Constants/Texts\";\nimport withLanguage from \"./LanguageContext\";\nimport InviteDialog from \"./InviteDialog\";\nimport Log from \"./Log\";\nvar muiTheme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  overrides: {\n    MuiStepLabel: {\n      label: {\n        fontFamily: \"Roboto\",\n        fontSize: \"1.56rem\"\n      }\n    },\n    MuiStepIcon: {\n      root: {\n        display: \"block\",\n        width: \"3rem\",\n        height: \"3rem\",\n        \"&$active\": {\n          color: \"#00838f\"\n        },\n        \"&$completed\": {\n          color: \"#00838f\"\n        }\n      }\n    },\n    MuiButton: {\n      root: {\n        fontSize: \"1.4rem\",\n        fontFamily: \"Roboto\"\n      }\n    }\n  },\n  palette: {\n    secondary: {\n      main: \"#c43e00\"\n    }\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"95%\"\n    },\n    continueButton: {\n      backgroundColor: \"#00838f\",\n      marginTop: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      \"&:hover\": {\n        backgroundColor: \"#00838f\"\n      }\n    },\n    stepLabel: {\n      root: {\n        color: \"#ffffff\",\n        \"&$active\": {\n          color: \"white\",\n          fontWeight: 500\n        },\n        \"&$completed\": {\n          color: theme.palette.text.primary,\n          fontWeight: 500\n        },\n        \"&$alternativeLabel\": {\n          textAlign: \"center\",\n          marginTop: 16,\n          fontSize: \"5rem\"\n        },\n        \"&$error\": {\n          color: theme.palette.error.main\n        }\n      }\n    },\n    cancelButton: {\n      backgroundColor: \"#ffffff\",\n      marginTop: theme.spacing.unit,\n      color: \"grey\",\n      marginRight: theme.spacing.unit\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing.unit * 2\n    },\n    resetContainer: {\n      padding: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar CreateGroupStepper = /*#__PURE__*/function (_React$Component) {\n  _inherits(CreateGroupStepper, _React$Component);\n\n  var _super = _createSuper(CreateGroupStepper);\n\n  function CreateGroupStepper() {\n    var _this;\n\n    _classCallCheck(this, CreateGroupStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      inviteModalIsOpen: false,\n      fetchedGroups: false,\n      activeStep: 0,\n      formIsValidated: false,\n      name: \"\",\n      description: \"\",\n      location: \"\",\n      inviteIds: [],\n      groupNames: [],\n      groupVisibility: false,\n      creatingGroup: false,\n      contactType: \"email\",\n      contactInfo: \"\"\n    };\n\n    _this.handleMessage = function (event) {\n      var activeStep = _this.state.activeStep;\n      var history = _this.props.history;\n      var data = JSON.parse(event.data);\n\n      if (data.action === \"stepperGoBack\") {\n        if (activeStep - 1 >= 0) {\n          _this.setState({\n            activeStep: activeStep - 1\n          });\n        } else {\n          history.goBack();\n        }\n      }\n    };\n\n    _this.createGroup = function () {\n      var user = JSON.parse(localStorage.getItem(\"user\"));\n      var history = _this.props.history;\n\n      _this.setState({\n        creatingGroup: true\n      });\n\n      var _this$state = _this.state,\n          description = _this$state.description,\n          visible = _this$state.groupVisibility,\n          invite_ids = _this$state.inviteIds,\n          location = _this$state.location,\n          contactType = _this$state.contactType,\n          contactInfo = _this$state.contactInfo,\n          name = _this$state.name;\n      axios.post(\"/api/groups\", {\n        google_token: user.google_token,\n        name: name,\n        description: description,\n        location: location,\n        background: \"#00838F\",\n        contact_type: contactType,\n        contact_info: contactInfo,\n        visible: visible,\n        owner_id: user.id,\n        email: user.email,\n        invite_ids: invite_ids\n      }).then(function (response) {\n        Log.info(response);\n        history.push(\"/myfamiliesshare\");\n      }).catch(function (error) {\n        Log.error(error);\n        history.push(\"/myfamiliesshare\");\n      });\n    };\n\n    _this.handleContinue = function () {\n      var activeStep = _this.state.activeStep;\n\n      if (_this.validate()) {\n        if (activeStep === 4) {\n          _this.createGroup();\n        }\n\n        _this.setState(function (state) {\n          return {\n            activeStep: state.activeStep + 1,\n            formIsValidated: false\n          };\n        });\n      } else {\n        _this.setState({\n          formIsValidated: true\n        });\n      }\n    };\n\n    _this.handleCancel = function () {\n      _this.setState(function (state) {\n        return {\n          activeStep: state.activeStep - 1\n        };\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _this$state2 = _this.state,\n          groupNames = _this$state2.groupNames,\n          groupVisibility = _this$state2.groupVisibility;\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var language = _this.props.language;\n\n      if (name === \"name\") {\n        var nameExists = groupNames.filter(function (groupName) {\n          return groupName.toUpperCase() === value.toUpperCase().trim();\n        }).length > 0;\n\n        if (nameExists) {\n          event.target.setCustomValidity(Texts[language].createGroupStepper.nameErr);\n        } else {\n          event.target.setCustomValidity(\"\");\n        }\n      }\n\n      if (name === \"groupVisibility\") {\n        _this.setState({\n          groupVisibility: !groupVisibility\n        });\n      } else {\n        _this.setState(_defineProperty({}, name, value));\n      }\n    };\n\n    _this.validate = function () {\n      var language = _this.props.language;\n      var texts = Texts[language].createGroupStepper;\n\n      if (_this.formEl.checkValidity() === false) {\n        for (var i = 0; i < _this.formEl.length; i += 1) {\n          var elem = _this.formEl[i];\n          var errorLabel = document.getElementById(\"\".concat(elem.name, \"Err\"));\n\n          if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\n            if (!elem.validity.valid) {\n              if (elem.validity.valueMissing) {\n                errorLabel.textContent = texts.requiredErr;\n              } else if (elem.validity.customError) {\n                errorLabel.textContent = texts.nameErr;\n              }\n            } else {\n              errorLabel.textContent = \"\";\n            }\n          }\n        }\n\n        return false;\n      }\n\n      for (var _i = 0; _i < _this.formEl.length; _i += 1) {\n        var _elem = _this.formEl[_i];\n\n        var _errorLabel = document.getElementById(\"\".concat(_elem.name, \"Err\"));\n\n        if (_errorLabel && _elem.nodeName.toLowerCase() !== \"button\") {\n          _errorLabel.textContent = \"\";\n        }\n      }\n\n      return true;\n    };\n\n    _this.handleInviteModalOpen = function () {\n      _this.setState({\n        inviteModalIsOpen: true\n      });\n    };\n\n    _this.handleInviteModalClose = function () {\n      _this.setState({\n        inviteModalIsOpen: false\n      });\n    };\n\n    _this.handleInvite = function (inviteIds) {\n      _this.setState({\n        inviteModalIsOpen: false,\n        inviteIds: inviteIds\n      });\n    };\n\n    _this.getStepContent = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          language = _this$props.language;\n      var contactTypes = [\"phone\", \"email\"];\n      var _this$state3 = _this.state,\n          activeStep = _this$state3.activeStep,\n          name = _this$state3.name,\n          location = _this$state3.location,\n          description = _this$state3.description,\n          inviteModalIsOpen = _this$state3.inviteModalIsOpen,\n          groupVisibility = _this$state3.groupVisibility,\n          contactType = _this$state3.contactType,\n          contactInfo = _this$state3.contactInfo;\n      var texts = Texts[language].createGroupStepper;\n\n      switch (activeStep) {\n        case 0:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"createGroupInput form-control\",\n            placeholder: texts.name,\n            onChange: _this.handleChange,\n            required: true,\n            value: name,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"invalid-feedback\",\n            id: \"nameErr\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"textarea\", {\n            rows: \"1\",\n            name: \"description\",\n            className: \"textareaInput form-control\",\n            placeholder: texts.description,\n            value: description,\n            onChange: function onChange(event) {\n              _this.handleChange(event);\n\n              autosize(document.querySelectorAll(\"textarea\"));\n            },\n            required: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"invalid-feedback\",\n            id: \"descriptionErr\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 13\n            }\n          }));\n\n        case 1:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row no-gutters\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"groupVisibility\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }\n          }, groupVisibility ? texts.visibleGroup : texts.invisibleGroup), /*#__PURE__*/React.createElement(Switch, {\n            checked: groupVisibility,\n            onClick: function onClick() {\n              return _this.handleChange({\n                target: {\n                  name: \"groupVisibility\",\n                  value: \"\"\n                }\n              });\n            },\n            value: \"groupVisibility\",\n            classes: {\n              switchBase: classes.colorSwitchBase,\n              checked: classes.colorChecked,\n              bar: classes.colorBar\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 13\n            }\n          }));\n\n        case 2:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            className: \"createGroupInput form-control\",\n            placeholder: texts.area,\n            onChange: _this.handleChange,\n            required: true,\n            value: location,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"invalid-feedback\",\n            id: \"locationErr\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 13\n            }\n          }));\n\n        case 3:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"select\", {\n            value: contactType,\n            style: {\n              width: \"100px\"\n            },\n            className: \"createGroupSelectInput \",\n            onChange: _this.handleChange,\n            name: \"contactType\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 13\n            }\n          }, contactTypes.map(function (d) {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: d,\n              value: d,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }\n            }, texts.contactTypes[d]);\n          })), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            required: true,\n            name: \"contactInfo\",\n            className: \"createGroupInput form-control\",\n            placeholder: texts.contactInfo,\n            onChange: _this.handleChange,\n            value: contactInfo,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"invalid-feedback\",\n            id: \"contactInfoErr\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 13\n            }\n          }));\n\n        case 4:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row no-gutters\",\n            id: \"createGroupScreenInvites\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(InviteDialog, {\n            isOpen: inviteModalIsOpen,\n            handleClose: _this.handleInviteModalClose,\n            handleInvite: _this.handleInvite,\n            inviteType: \"member\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"h1\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 13\n            }\n          }, texts.invite), /*#__PURE__*/React.createElement(\"i\", {\n            role: \"button\",\n            tabIndex: -42,\n            className: \"fas fa-plus\",\n            onClick: _this.handleInviteModalOpen,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 13\n            }\n          }));\n\n        default:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 16\n            }\n          }, \"Lorem Ipsum\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateGroupStepper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/groups\", {\n        params: {\n          searchBy: \"all\"\n        }\n      }).then(function (response) {\n        var groups = response.data;\n\n        _this2.setState({\n          fetchedGroups: true,\n          groupNames: groups.map(function (group) {\n            return group.name;\n          })\n        });\n      }).catch(function (error) {\n        Log.error(error);\n\n        _this2.setState({\n          fetchedGroups: true,\n          groupNames: []\n        });\n      });\n      document.addEventListener(\"message\", this.handleMessage, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"message\", this.handleMessage, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          language = _this$props2.language;\n      var texts = Texts[language].createGroupStepper;\n      var steps = texts.stepLabels;\n      var _this$state4 = this.state,\n          activeStep = _this$state4.activeStep,\n          formIsValidated = _this$state4.formIsValidated,\n          creatingGroup = _this$state4.creatingGroup,\n          fetchedGroups = _this$state4.fetchedGroups;\n      var formClass = [];\n\n      if (formIsValidated) {\n        formClass.push(\"was-validated\");\n      } else {\n        formClass.pop();\n      }\n\n      return fetchedGroups && !creatingGroup ? /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        ref: function ref(form) {\n          _this3.formEl = form;\n        },\n        onSubmit: function onSubmit(event) {\n          return event.preventDefault();\n        },\n        className: formClass,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        theme: muiTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }\n      }, steps.map(function (label) {\n        return /*#__PURE__*/React.createElement(Step, {\n          key: label,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(StepLabel, {\n          className: classes.stepLabel,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }\n        }, label), /*#__PURE__*/React.createElement(StepContent, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }\n        }, _this3.getStepContent(), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.actionsContainer,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: _this3.handleContinue,\n          className: classes.continueButton,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 27\n          }\n        }, activeStep === steps.length - 1 ? texts.finish : texts.continue), /*#__PURE__*/React.createElement(Button, {\n          disabled: activeStep === 0,\n          onClick: _this3.handleCancel,\n          className: classes.cancelButton,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 27\n          }\n        }, texts.cancel)))));\n      }))))) : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CreateGroupStepper;\n}(React.Component);\n\nCreateGroupStepper.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n  language: PropTypes.string\n};\nexport default withRouter(withLanguage(withStyles(styles)(CreateGroupStepper)));","map":{"version":3,"sources":["C:/Users/nucle/Documents/GitHub/Families_Share-platform/client/src/components/CreateGroupStepper.js"],"names":["React","PropTypes","withStyles","MuiThemeProvider","createMuiTheme","Stepper","Step","StepLabel","StepContent","Button","Switch","autosize","withRouter","axios","LoadingSpinner","Texts","withLanguage","InviteDialog","Log","muiTheme","typography","useNextVariants","overrides","MuiStepLabel","label","fontFamily","fontSize","MuiStepIcon","root","display","width","height","color","MuiButton","palette","secondary","main","styles","theme","continueButton","backgroundColor","marginTop","spacing","unit","marginRight","stepLabel","fontWeight","text","primary","textAlign","error","cancelButton","actionsContainer","marginBottom","resetContainer","padding","CreateGroupStepper","state","inviteModalIsOpen","fetchedGroups","activeStep","formIsValidated","name","description","location","inviteIds","groupNames","groupVisibility","creatingGroup","contactType","contactInfo","handleMessage","event","history","props","data","JSON","parse","action","setState","goBack","createGroup","user","localStorage","getItem","visible","invite_ids","post","google_token","background","contact_type","contact_info","owner_id","id","email","then","response","info","push","catch","handleContinue","validate","handleCancel","handleChange","target","value","language","nameExists","filter","groupName","toUpperCase","trim","length","setCustomValidity","createGroupStepper","nameErr","texts","formEl","checkValidity","i","elem","errorLabel","document","getElementById","nodeName","toLowerCase","validity","valid","valueMissing","textContent","requiredErr","customError","handleInviteModalOpen","handleInviteModalClose","handleInvite","getStepContent","classes","contactTypes","querySelectorAll","visibleGroup","invisibleGroup","switchBase","colorSwitchBase","checked","colorChecked","bar","colorBar","area","map","d","invite","get","params","searchBy","groups","group","addEventListener","removeEventListener","steps","stepLabels","formClass","pop","form","preventDefault","finish","continue","cancel","Component","propTypes","object","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport autosize from \"autosize\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport Texts from \"../Constants/Texts\";\r\nimport withLanguage from \"./LanguageContext\";\r\nimport InviteDialog from \"./InviteDialog\";\r\nimport Log from \"./Log\";\r\n\r\nconst muiTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  overrides: {\r\n    MuiStepLabel: {\r\n      label: {\r\n        fontFamily: \"Roboto\",\r\n        fontSize: \"1.56rem\"\r\n      }\r\n    },\r\n    MuiStepIcon: {\r\n      root: {\r\n        display: \"block\",\r\n        width: \"3rem\",\r\n        height: \"3rem\",\r\n        \"&$active\": {\r\n          color: \"#00838f\"\r\n        },\r\n        \"&$completed\": {\r\n          color: \"#00838f\"\r\n        }\r\n      }\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontSize: \"1.4rem\",\r\n        fontFamily: \"Roboto\"\r\n      }\r\n    }\r\n  },\r\n  palette: {\r\n    secondary: {\r\n      main: \"#c43e00\"\r\n    }\r\n  }\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"95%\"\r\n  },\r\n  continueButton: {\r\n    backgroundColor: \"#00838f\",\r\n    marginTop: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#00838f\"\r\n    }\r\n  },\r\n  stepLabel: {\r\n    root: {\r\n      color: \"#ffffff\",\r\n      \"&$active\": {\r\n        color: \"white\",\r\n        fontWeight: 500\r\n      },\r\n      \"&$completed\": {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 500\r\n      },\r\n      \"&$alternativeLabel\": {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n        fontSize: \"5rem\"\r\n      },\r\n      \"&$error\": {\r\n        color: theme.palette.error.main\r\n      }\r\n    }\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: \"#ffffff\",\r\n    marginTop: theme.spacing.unit,\r\n    color: \"grey\",\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing.unit * 2\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing.unit * 3\r\n  }\r\n});\r\n\r\nclass CreateGroupStepper extends React.Component {\r\n  state = {\r\n    inviteModalIsOpen: false,\r\n    fetchedGroups: false,\r\n    activeStep: 0,\r\n    formIsValidated: false,\r\n    name: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    inviteIds: [],\r\n    groupNames: [],\r\n    groupVisibility: false,\r\n    creatingGroup: false,\r\n    contactType: \"email\",\r\n    contactInfo: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/groups\", { params: { searchBy: \"all\" } })\r\n      .then(response => {\r\n        const groups = response.data;\r\n        this.setState({\r\n          fetchedGroups: true,\r\n          groupNames: groups.map(group => group.name)\r\n        });\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        this.setState({ fetchedGroups: true, groupNames: [] });\r\n      });\r\n    document.addEventListener(\"message\", this.handleMessage, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"message\", this.handleMessage, false);\r\n  }\r\n\r\n  handleMessage = event => {\r\n    const { activeStep } = this.state;\r\n    const { history } = this.props;\r\n    const data = JSON.parse(event.data);\r\n    if (data.action === \"stepperGoBack\") {\r\n      if (activeStep - 1 >= 0) {\r\n        this.setState({ activeStep: activeStep - 1 });\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  createGroup = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const { history } = this.props;\r\n    this.setState({ creatingGroup: true });\r\n    const {\r\n      description,\r\n      groupVisibility: visible,\r\n      inviteIds: invite_ids,\r\n      location,\r\n      contactType,\r\n      contactInfo,\r\n      name\r\n    } = this.state;\r\n    axios\r\n      .post(\"/api/groups\", {\r\n        google_token: user.google_token,\r\n        name,\r\n        description,\r\n        location,\r\n        background: \"#00838F\",\r\n        contact_type: contactType,\r\n        contact_info: contactInfo,\r\n        visible,\r\n        owner_id: user.id,\r\n        email: user.email,\r\n        invite_ids\r\n      })\r\n      .then(response => {\r\n        Log.info(response);\r\n        history.push(\"/myfamiliesshare\");\r\n      })\r\n      .catch(error => {\r\n        Log.error(error);\r\n        history.push(\"/myfamiliesshare\");\r\n      });\r\n  };\r\n\r\n  handleContinue = () => {\r\n    const { activeStep } = this.state;\r\n    if (this.validate()) {\r\n      if (activeStep === 4) {\r\n        this.createGroup();\r\n      }\r\n      this.setState(state => ({\r\n        activeStep: state.activeStep + 1,\r\n        formIsValidated: false\r\n      }));\r\n    } else {\r\n      this.setState({ formIsValidated: true });\r\n    }\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { groupNames, groupVisibility } = this.state;\r\n    const { name, value } = event.target;\r\n    const { language } = this.props;\r\n    if (name === \"name\") {\r\n      const nameExists =\r\n        groupNames.filter(\r\n          groupName => groupName.toUpperCase() === value.toUpperCase().trim()\r\n        ).length > 0;\r\n      if (nameExists) {\r\n        event.target.setCustomValidity(\r\n          Texts[language].createGroupStepper.nameErr\r\n        );\r\n      } else {\r\n        event.target.setCustomValidity(\"\");\r\n      }\r\n    }\r\n    if (name === \"groupVisibility\") {\r\n      this.setState({ groupVisibility: !groupVisibility });\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const { language } = this.props;\r\n    const texts = Texts[language].createGroupStepper;\r\n    if (this.formEl.checkValidity() === false) {\r\n      for (let i = 0; i < this.formEl.length; i += 1) {\r\n        const elem = this.formEl[i];\r\n        const errorLabel = document.getElementById(`${elem.name}Err`);\r\n        if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n          if (!elem.validity.valid) {\r\n            if (elem.validity.valueMissing) {\r\n              errorLabel.textContent = texts.requiredErr;\r\n            } else if (elem.validity.customError) {\r\n              errorLabel.textContent = texts.nameErr;\r\n            }\r\n          } else {\r\n            errorLabel.textContent = \"\";\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.formEl.length; i += 1) {\r\n      const elem = this.formEl[i];\r\n      const errorLabel = document.getElementById(`${elem.name}Err`);\r\n      if (errorLabel && elem.nodeName.toLowerCase() !== \"button\") {\r\n        errorLabel.textContent = \"\";\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleInviteModalOpen = () => {\r\n    this.setState({ inviteModalIsOpen: true });\r\n  };\r\n\r\n  handleInviteModalClose = () => {\r\n    this.setState({ inviteModalIsOpen: false });\r\n  };\r\n\r\n  handleInvite = inviteIds => {\r\n    this.setState({ inviteModalIsOpen: false, inviteIds });\r\n  };\r\n\r\n  getStepContent = () => {\r\n    const { classes, language } = this.props;\r\n    const contactTypes = [\"phone\", \"email\"];\r\n    const {\r\n      activeStep,\r\n      name,\r\n      location,\r\n      description,\r\n      inviteModalIsOpen,\r\n      groupVisibility,\r\n      contactType,\r\n      contactInfo\r\n    } = this.state;\r\n    const texts = Texts[language].createGroupStepper;\r\n    switch (activeStep) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"createGroupInput form-control\"\r\n              placeholder={texts.name}\r\n              onChange={this.handleChange}\r\n              required\r\n              value={name}\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"nameErr\" />\r\n            <textarea\r\n              rows=\"1\"\r\n              name=\"description\"\r\n              className=\"textareaInput form-control\"\r\n              placeholder={texts.description}\r\n              value={description}\r\n              onChange={event => {\r\n                this.handleChange(event);\r\n                autosize(document.querySelectorAll(\"textarea\"));\r\n              }}\r\n              required\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"descriptionErr\" />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div className=\"row no-gutters\">\r\n            <h1 className=\"groupVisibility\">\r\n              {groupVisibility ? texts.visibleGroup : texts.invisibleGroup}\r\n            </h1>\r\n            <Switch\r\n              checked={groupVisibility}\r\n              onClick={() =>\r\n                this.handleChange({\r\n                  target: { name: \"groupVisibility\", value: \"\" }\r\n                })\r\n              }\r\n              value=\"groupVisibility\"\r\n              classes={{\r\n                switchBase: classes.colorSwitchBase,\r\n                checked: classes.colorChecked,\r\n                bar: classes.colorBar\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              className=\"createGroupInput form-control\"\r\n              placeholder={texts.area}\r\n              onChange={this.handleChange}\r\n              required\r\n              value={location}\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"locationErr\" />\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <select\r\n              value={contactType}\r\n              style={{ width: \"100px\" }}\r\n              className=\"createGroupSelectInput \"\r\n              onChange={this.handleChange}\r\n              name=\"contactType\"\r\n            >\r\n              {contactTypes.map(d => (\r\n                <option key={d} value={d}>\r\n                  {texts.contactTypes[d]}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"contactInfo\"\r\n              className=\"createGroupInput form-control\"\r\n              placeholder={texts.contactInfo}\r\n              onChange={this.handleChange}\r\n              value={contactInfo}\r\n            />\r\n            <span className=\"invalid-feedback\" id=\"contactInfoErr\" />\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div className=\"row no-gutters\" id=\"createGroupScreenInvites\">\r\n            <InviteDialog\r\n              isOpen={inviteModalIsOpen}\r\n              handleClose={this.handleInviteModalClose}\r\n              handleInvite={this.handleInvite}\r\n              inviteType=\"member\"\r\n            />\r\n            <h1>{texts.invite}</h1>\r\n            <i\r\n              role=\"button\"\r\n              tabIndex={-42}\r\n              className=\"fas fa-plus\"\r\n              onClick={this.handleInviteModalOpen}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return <div>Lorem Ipsum</div>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, language } = this.props;\r\n    const texts = Texts[language].createGroupStepper;\r\n    const steps = texts.stepLabels;\r\n    const {\r\n      activeStep,\r\n      formIsValidated,\r\n      creatingGroup,\r\n      fetchedGroups\r\n    } = this.state;\r\n    const formClass = [];\r\n    if (formIsValidated) {\r\n      formClass.push(\"was-validated\");\r\n    } else {\r\n      formClass.pop();\r\n    }\r\n\r\n    return fetchedGroups && !creatingGroup ? (\r\n      <div className={classes.root}>\r\n        <form\r\n          ref={form => {\r\n            this.formEl = form;\r\n          }}\r\n          onSubmit={event => event.preventDefault()}\r\n          className={formClass}\r\n          noValidate\r\n        >\r\n          <MuiThemeProvider theme={muiTheme}>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n              {steps.map(label => {\r\n                return (\r\n                  <Step key={label}>\r\n                    <StepLabel className={classes.stepLabel}>{label}</StepLabel>\r\n                    <StepContent>\r\n                      {this.getStepContent()}\r\n                      <div className={classes.actionsContainer}>\r\n                        <div>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleContinue}\r\n                            className={classes.continueButton}\r\n                          >\r\n                            {activeStep === steps.length - 1\r\n                              ? texts.finish\r\n                              : texts.continue}\r\n                          </Button>\r\n                          <Button\r\n                            disabled={activeStep === 0}\r\n                            onClick={this.handleCancel}\r\n                            className={classes.cancelButton}\r\n                          >\r\n                            {texts.cancel}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </StepContent>\r\n                  </Step>\r\n                );\r\n              })}\r\n            </Stepper>\r\n          </MuiThemeProvider>\r\n        </form>\r\n      </div>\r\n    ) : (\r\n      <LoadingSpinner />\r\n    );\r\n  }\r\n}\r\n\r\nCreateGroupStepper.propTypes = {\r\n  classes: PropTypes.object,\r\n  history: PropTypes.object,\r\n  language: PropTypes.string\r\n};\r\nexport default withRouter(withLanguage(withStyles(styles)(CreateGroupStepper)));\r\n"]},"metadata":{},"sourceType":"module"}